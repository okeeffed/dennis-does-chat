/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

/* Reset unordered list style */
.animate {
  -webkit-transition: all 390ms ease-out;
  -o-transition: all 390ms ease-out;
  transition: all 390ms ease-out; }

.e-hover-raised:hover {
  -webkit-transform: translateY(-5px);
  -ms-transform: translateY(-5px);
  transform: translateY(-5px);
  -webkit-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23); }

.e-hover-floating:hover {
  -webkit-transform: translateY(-5px);
  -ms-transform: translateY(-5px);
  transform: translateY(-5px);
  -webkit-box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22); }

.e-raised {
  -webkit-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23); }

.e-floating {
  -webkit-box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22); }

body,
html {
  margin: 0;
  padding: 0;
  border: 0; }

.container {
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  position: relative; }

.margin-bottom-30 {
  margin-bottom: 30px; }

/* open sans - light */
@font-face {
  font-family: 'opensans-light';
  font-style: normal;
  font-weight: 300;
  src: local("OpenSans Light"), local("OpenSans-Light"), url("/styles/fonts/OpenSans-Light.ttf") format("truetype"); }

/* open sans - medium */
@font-face {
  font-family: 'opensans-medium';
  font-style: normal;
  font-weight: 500;
  src: local("OpenSans Medium"), local("OpenSans-Medium"), url("/styles/fonts/OpenSans-Medium.ttf") format("truetype"); }

/* open sans - regular */
@font-face {
  font-family: 'opensans-regular';
  font-style: normal;
  font-weight: 400;
  src: local("OpenSans Regular"), local("OpenSans-Regular"), url("/styles/fonts/OpenSans-Regular.ttf") format("truetype"); }

/* open sans - bold */
@font-face {
  font-family: 'opensans-bold';
  font-style: normal;
  font-weight: 700;
  src: local("OpenSans Bold"), local("OpenSans-Bold"), url("/styles/fonts/OpenSans-Bold.ttf") format("truetype"); }

/* open sans - semibold */
@font-face {
  font-family: 'opensans-semibold';
  font-style: normal;
  font-weight: 600;
  src: local("OpenSans SemiBold"), local("OpenSans-SemiBold"), url("/styles/fonts/OpenSans-SemiBold.ttf") format("truetype"); }

/* open sans - extrabold */
@font-face {
  font-family: 'opensans-extrabold';
  font-style: normal;
  font-weight: 600;
  src: local("OpenSans ExtraBold"), local("OpenSans-ExtraBold"), url("/styles/fonts/OpenSans-ExtraBold.ttf") format("truetype"); }

html {
  font-size: 62.5%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

a {
  color: inherit;
  text-decoration: none; }

label,
button,
a,
td {
  font-family: 'opensans-regular', sans-serif; }

h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin: 0;
  font-weight: normal; }

h1 {
  margin-bottom: 10px;
  font-family: 'opensans-bold', sans-serif;
  font-size: 7.8rem; }

h2 {
  margin-bottom: 10px;
  font-family: 'opensans-semibold', sans-serif;
  font-size: 2rem;
  line-height: 40px; }

h3 {
  margin-bottom: 10px;
  font-family: 'opensans-semibold', sans-serif;
  font-size: 1.7rem;
  line-height: 20px; }

p {
  margin: 0;
  font-family: 'opensans-regular', sans-serif;
  font-size: 1.5rem;
  line-height: 1.4; }

code {
  font-size: 1.2rem;
  white-space: pre-wrap !important; }

.button {
  display: block;
  margin-bottom: 10px;
  line-height: normal;
  overflow: visible;
  padding: 0;
  width: 200px;
  height: 60px;
  font-size: 2rem;
  background-color: #BDC3C7;
  -webkit-transition: background-color 290ms ease-in;
  -o-transition: background-color 290ms ease-in;
  transition: background-color 290ms ease-in;
  border: 0; }
  .button:hover {
    background-color: #a1aab0; }
  @media only screen and (max-width: 800px) {
    .button {
      -webkit-transition: background-color 225ms ease-in;
      -o-transition: background-color 225ms ease-in;
      transition: background-color 225ms ease-in; } }
  .button.primary {
    color: #FFF;
    background-color: #4990E2; }
    .button.primary:hover {
      background-color: #2276d6; }
  .button.secondary {
    color: #FFF;
    background-color: #2ECC71; }
    .button.secondary:hover {
      background-color: #25a25a; }
  .button.raised {
    -webkit-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23); }
  .button.floating {
    -webkit-box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22); }

.grid-container::after {
  clear: both;
  content: "";
  display: block; }

.grid {
  max-width: 800px; }
  .grid.quick-replies {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    padding: 10px; }
  .grid > .item {
    margin-bottom: 10px;
    width: calc(100% - 20px);
    float: left;
    margin-left: 10px; }
    .grid > .item.-one {
      width: calc(8.33333% - 10.83333px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-two {
      width: calc(16.66667% - 11.66667px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-three {
      width: calc(25% - 12.5px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-four {
      width: calc(33.33333% - 13.33333px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-five {
      width: calc(41.66667% - 14.16667px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-six {
      width: calc(50% - 15px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-seven {
      width: calc(58.33333% - 15.83333px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-eight {
      width: calc(66.66667% - 16.66667px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-nine {
      width: calc(75% - 17.5px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-ten {
      width: calc(83.33333% - 18.33333px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-eleven {
      width: calc(91.66667% - 19.16667px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-twelve {
      width: calc(100% - 20px);
      float: left;
      margin-left: 10px; }
    @media only screen and (max-width: 1000px) {
      .grid > .item {
        width: calc(50% - 1.5rem);
        float: left;
        margin-left: 1rem; }
        .grid > .item.-one, .grid > .item.-two, .grid > .item.-three, .grid > .item.-four {
          width: calc(50% - 1.5rem);
          float: left;
          margin-left: 1rem; }
        .grid > .item.-five, .grid > .item.-six, .grid > .item.-seven, .grid > .item.-eight, .grid > .item.-nine, .grid > .item.-ten, .grid > .item.-eleven, .grid > .item.-twelve {
          width: calc(100% - 2rem);
          float: left;
          margin-left: 1rem; } }
    @media only screen and (max-width: 800px) {
      .grid > .item {
        width: calc(100% - 2rem);
        float: left;
        margin-left: 1rem; }
        .grid > .item.-one, .grid > .item.-two, .grid > .item.-three, .grid > .item.-four, .grid > .item.-five, .grid > .item.-six, .grid > .item.-seven, .grid > .item.-eight, .grid > .item.-nine, .grid > .item.-ten, .grid > .item.-eleven, .grid > .item.-twelve {
          width: calc(100% - 2rem);
          float: left;
          margin-left: 1rem; } }

.header {
  position: fixed;
  top: 0;
  width: 100%;
  height: 60px;
  z-index: 99999;
  color: #000;
  background-color: #FFF; }
  .header .links {
    float: right; }
  .header .link-list {
    margin: 0;
    padding: 0;
    line-height: 60px; }
  .header .link {
    display: inline-block;
    margin-left: 10px; }
    .header .link > a {
      font-family: 'opensans-semibold', sans-serif;
      font-size: 1.8rem;
      -webkit-transition: color 290ms ease-out;
      -o-transition: color 290ms ease-out;
      transition: color 290ms ease-out; }
      .header .link > a:hover, .header .link > a:active {
        color: #4d4d4d; }
      @media only screen and (max-width: 800px) {
        .header .link > a {
          font-size: 1.4rem; } }
    .header .link:last-of-type {
      margin-right: 10px; }
    @media only screen and (max-width: 800px) {
      .header .link {
        display: none; } }
  .header .link-home {
    font-family: 'opensans-extrabold', sans-serif;
    margin-left: 20px;
    font-size: 1.8rem;
    line-height: 60px;
    -webkit-transition: color 290ms ease-out;
    -o-transition: color 290ms ease-out;
    transition: color 290ms ease-out; }
    .header .link-home:hover, .header .link-home:active {
      color: #4d4d4d; }
    @media only screen and (max-width: 800px) {
      .header .link-home {
        font-size: 1.2rem; } }

.input-set {
  height: 200px; }
  .input-set .label {
    display: block;
    margin-bottom: 10px;
    color: #000;
    font-size: 1.5rem; }
  .input-set .input {
    margin-bottom: 10px;
    border: solid 1px #ECF0F1;
    background-color: #ECF0F1;
    color: #FFF;
    height: 50px;
    width: 90%;
    font-family: 'opensans-regular', sans-serif;
    font-size: 1.7rem;
    -webkit-transition: all 270ms ease-out;
    -o-transition: all 270ms ease-out;
    transition: all 270ms ease-out; }
    .input-set .input.valid {
      border: solid 1px #2ECC71; }
    .input-set .input.error {
      border: solid 1px #E74C3C; }
      .input-set .input.error + .error-message {
        opacity: 1; }

.loading-overlay {
  position: absolute;
  z-index: 99999;
  top: 0;
  left: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  background-color: #fafafa;
  opacity: 0;
  -webkit-transition: all 250ms ease-in;
  -o-transition: all 250ms ease-in;
  transition: all 250ms ease-in; }
  .loading-overlay.-visible {
    opacity: 0.5; }
  .loading-overlay .loading {
    width: 10.5rem;
    height: 10.5rem; }
    .loading-overlay .loading .loading-svg {
      -webkit-animation: rotating 1s linear infinite;
      animation: rotating 1s linear infinite;
      fill: transparent;
      stroke: #000;
      stroke-width: 7;
      stroke-linecap: butt;
      stroke-dasharray: 240;
      stroke-dashoffset: 40; }

@-webkit-keyframes rotating {
  from {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); } }

@keyframes rotating {
  from {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); } }

.progress-bar {
  margin-bottom: 40px;
  width: 100%;
  max-width: 694px;
  background-color: #ECF0F1; }
  .progress-bar > span {
    display: block;
    height: 6px; }
  .progress-bar .bottom {
    width: 0%;
    background-color: #000;
    -webkit-transition: width 270ms ease-out;
    -o-transition: width 270ms ease-out;
    transition: width 270ms ease-out; }
    .progress-bar .bottom.-ten {
      width: 10%; }
    .progress-bar .bottom.-twenty {
      width: 20%; }
    .progress-bar .bottom.-thirty {
      width: 30%; }
    .progress-bar .bottom.-forty {
      width: 40%; }
    .progress-bar .bottom.-fifty {
      width: 50%; }
    .progress-bar .bottom.-sixty {
      width: 60%; }
    .progress-bar .bottom.-seventy {
      width: 70%; }
    .progress-bar .bottom.-eighty {
      width: 80%; }
    .progress-bar .bottom.-ninety {
      width: 90%; }
    .progress-bar .bottom.-one-hundred {
      width: 100%; }

.skiplinks {
  padding: 0;
  margin: 0; }
  .skiplinks a {
    position: absolute;
    left: -1000px;
    z-index: 200;
    margin: 0;
    padding: .5em;
    background: #FFF;
    font-size: 200%;
    font-weight: bold;
    text-decoration: none; }
    .skiplinks a:active, .skiplinks a:focus, .skiplinks a:hover {
      display: inline;
      top: 0;
      left: 0;
      color: #FFF;
      background: #000; }

.chat-bubble .bot,
.chat-bubble .user {
  padding: 8px;
  border-radius: 4px; }

.chat-bubble .bot {
  float: right;
  background-color: #4990E2; }
  .chat-bubble .bot > .reply {
    color: #FFF;
    text-align: right; }

.chat-bubble .user {
  float: left;
  background-color: #FFF; }
  .chat-bubble .user > .reply {
    text-align: left; }

.conversation-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 10px;
  -webkit-box-flex: 5;
  -ms-flex: 5;
  flex: 5;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  overflow-y: scroll;
  padding: 10px;
  background-color: #FFF; }
  .conversation-wrapper .conversation {
    margin-top: auto; }

.grid {
  position: relative;
  display: inline-block;
  width: 100%; }

.home {
  margin: 0 auto;
  padding: 10px 20px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  background-color: #4990E2; }
  .home::after {
    clear: both;
    content: "";
    display: block; }
  .home .chat {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-flex: 1;
    -ms-flex: 1;
    flex: 1; }
  .home .cta {
    -webkit-box-flex: 3;
    -ms-flex: 3;
    flex: 3; }

.item.quick-reply {
  height: 60px; }

.quick-reply {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  background-color: #FFF;
  border-radius: 4px; }

h1 {
  font-size: 2.2rem; }

h2 {
  font-size: 1.8rem; }

p {
  font-size: 1.6rem;
  line-height: 1.4em; }

ol,
ul {
  font-size: 1.6rem;
  line-height: 1.4em; }

code {
  background-color: black;
  color: white;
  font-size: 1.4rem;
  padding: 2px 10px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
