/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

/* Reset unordered list style */
.animate {
  -webkit-transition: all 390ms ease-out;
  -o-transition: all 390ms ease-out;
  transition: all 390ms ease-out; }

.e-hover-raised:hover {
  -webkit-transform: translateY(-5px);
  -ms-transform: translateY(-5px);
  transform: translateY(-5px);
  -webkit-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23); }

.e-hover-floating:hover {
  -webkit-transform: translateY(-5px);
  -ms-transform: translateY(-5px);
  transform: translateY(-5px);
  -webkit-box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22); }

.e-raised {
  -webkit-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23); }

.e-floating {
  -webkit-box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
  box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22); }

body,
html {
  margin: 0;
  padding: 0;
  border: 0; }

.container {
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  position: relative; }

.margin-bottom-30 {
  margin-bottom: 30px; }

/* open sans - light */
@font-face {
  font-family: 'opensans-light';
  font-style: normal;
  font-weight: 300;
  src: local("OpenSans Light"), local("OpenSans-Light"), url("/styles/fonts/OpenSans-Light.ttf") format("truetype"); }

/* open sans - medium */
@font-face {
  font-family: 'opensans-medium';
  font-style: normal;
  font-weight: 500;
  src: local("OpenSans Medium"), local("OpenSans-Medium"), url("/styles/fonts/OpenSans-Medium.ttf") format("truetype"); }

/* open sans - regular */
@font-face {
  font-family: 'opensans-regular';
  font-style: normal;
  font-weight: 400;
  src: local("OpenSans Regular"), local("OpenSans-Regular"), url("/styles/fonts/OpenSans-Regular.ttf") format("truetype"); }

/* open sans - bold */
@font-face {
  font-family: 'opensans-bold';
  font-style: normal;
  font-weight: 700;
  src: local("OpenSans Bold"), local("OpenSans-Bold"), url("/styles/fonts/OpenSans-Bold.ttf") format("truetype"); }

/* open sans - semibold */
@font-face {
  font-family: 'opensans-semibold';
  font-style: normal;
  font-weight: 600;
  src: local("OpenSans SemiBold"), local("OpenSans-SemiBold"), url("/styles/fonts/OpenSans-SemiBold.ttf") format("truetype"); }

/* open sans - extrabold */
@font-face {
  font-family: 'opensans-extrabold';
  font-style: normal;
  font-weight: 600;
  src: local("OpenSans ExtraBold"), local("OpenSans-ExtraBold"), url("/styles/fonts/OpenSans-ExtraBold.ttf") format("truetype"); }

html {
  font-size: 62.5%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

body {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

a {
  color: inherit;
  text-decoration: none; }

label,
button,
a,
td {
  font-family: 'opensans-regular', sans-serif; }

h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin: 0;
  font-weight: normal; }

h1 {
  margin-bottom: 10px;
  font-family: 'opensans-bold', sans-serif;
  font-size: 7.8rem; }

h2 {
  margin-bottom: 10px;
  font-family: 'opensans-semibold', sans-serif;
  font-size: 2rem;
  line-height: 40px; }

h3 {
  margin-bottom: 10px;
  font-family: 'opensans-semibold', sans-serif;
  font-size: 1.7rem;
  line-height: 20px; }

p {
  margin: 0;
  font-family: 'opensans-regular', sans-serif;
  font-size: 1.5rem;
  line-height: 1.4; }

code {
  font-size: 1.2rem;
  white-space: pre-wrap !important; }

.button {
  display: block;
  margin-bottom: 10px;
  line-height: normal;
  overflow: visible;
  padding: 0;
  width: 200px;
  height: 60px;
  font-size: 2rem;
  background-color: #BDC3C7;
  -webkit-transition: background-color 290ms ease-in;
  -o-transition: background-color 290ms ease-in;
  transition: background-color 290ms ease-in;
  border: 0; }
  .button:hover {
    background-color: #a1aab0; }
  @media only screen and (max-width: 800px) {
    .button {
      -webkit-transition: background-color 225ms ease-in;
      -o-transition: background-color 225ms ease-in;
      transition: background-color 225ms ease-in; } }
  .button.primary {
    color: #FFF;
    background-color: #4990E2; }
    .button.primary:hover {
      background-color: #2276d6; }
  .button.secondary {
    color: #FFF;
    background-color: #2ECC71; }
    .button.secondary:hover {
      background-color: #25a25a; }
  .button.raised {
    -webkit-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23); }
  .button.floating {
    -webkit-box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22); }

.grid-container::after {
  clear: both;
  content: "";
  display: block; }

.grid {
  max-width: 800px; }
  .grid > .item {
    margin-bottom: 10px;
    width: calc(100% - 20px);
    float: left;
    margin-left: 10px; }
    .grid > .item.-one {
      width: calc(8.33333% - 10.83333px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-two {
      width: calc(16.66667% - 11.66667px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-three {
      width: calc(25% - 12.5px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-four {
      width: calc(33.33333% - 13.33333px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-five {
      width: calc(41.66667% - 14.16667px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-six {
      width: calc(50% - 15px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-seven {
      width: calc(58.33333% - 15.83333px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-eight {
      width: calc(66.66667% - 16.66667px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-nine {
      width: calc(75% - 17.5px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-ten {
      width: calc(83.33333% - 18.33333px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-eleven {
      width: calc(91.66667% - 19.16667px);
      float: left;
      margin-left: 10px; }
    .grid > .item.-twelve {
      width: calc(100% - 20px);
      float: left;
      margin-left: 10px; }
    @media only screen and (max-width: 1000px) {
      .grid > .item {
        width: calc(50% - 1.5rem);
        float: left;
        margin-left: 1rem; }
        .grid > .item.-one, .grid > .item.-two, .grid > .item.-three, .grid > .item.-four {
          width: calc(50% - 1.5rem);
          float: left;
          margin-left: 1rem; }
        .grid > .item.-five, .grid > .item.-six, .grid > .item.-seven, .grid > .item.-eight, .grid > .item.-nine, .grid > .item.-ten, .grid > .item.-eleven, .grid > .item.-twelve {
          width: calc(100% - 2rem);
          float: left;
          margin-left: 1rem; } }
    @media only screen and (max-width: 800px) {
      .grid > .item {
        width: calc(100% - 2rem);
        float: left;
        margin-left: 1rem; }
        .grid > .item.-one, .grid > .item.-two, .grid > .item.-three, .grid > .item.-four, .grid > .item.-five, .grid > .item.-six, .grid > .item.-seven, .grid > .item.-eight, .grid > .item.-nine, .grid > .item.-ten, .grid > .item.-eleven, .grid > .item.-twelve {
          width: calc(100% - 2rem);
          float: left;
          margin-left: 1rem; } }

.header {
  position: fixed;
  top: 0;
  width: 100%;
  height: 60px;
  z-index: 99999;
  color: #000;
  background-color: #FFF; }
  .header .links {
    float: right; }
  .header .link-list {
    margin: 0;
    padding: 0;
    line-height: 60px; }
  .header .link {
    display: inline-block;
    margin-left: 10px; }
    .header .link > a {
      font-family: 'opensans-semibold', sans-serif;
      font-size: 1.8rem;
      -webkit-transition: color 290ms ease-out;
      -o-transition: color 290ms ease-out;
      transition: color 290ms ease-out; }
      .header .link > a:hover, .header .link > a:active {
        color: #4d4d4d; }
      @media only screen and (max-width: 800px) {
        .header .link > a {
          font-size: 1.4rem; } }
    .header .link:last-of-type {
      margin-right: 10px; }
    @media only screen and (max-width: 800px) {
      .header .link {
        display: none; } }
  .header .link-home {
    font-family: 'opensans-extrabold', sans-serif;
    margin-left: 20px;
    font-size: 1.8rem;
    line-height: 60px;
    -webkit-transition: color 290ms ease-out;
    -o-transition: color 290ms ease-out;
    transition: color 290ms ease-out; }
    .header .link-home:hover, .header .link-home:active {
      color: #4d4d4d; }
    @media only screen and (max-width: 800px) {
      .header .link-home {
        font-size: 1.2rem; } }

.loading-overlay {
  position: absolute;
  z-index: 99999;
  top: 0;
  left: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  background-color: #fafafa;
  opacity: 0;
  -webkit-transition: all 250ms ease-in;
  -o-transition: all 250ms ease-in;
  transition: all 250ms ease-in; }
  .loading-overlay.-visible {
    opacity: 0.5; }
  .loading-overlay .loading {
    width: 10.5rem;
    height: 10.5rem; }
    .loading-overlay .loading .loading-svg {
      -webkit-animation: rotating 1s linear infinite;
      animation: rotating 1s linear infinite;
      fill: transparent;
      stroke: #000;
      stroke-width: 7;
      stroke-linecap: butt;
      stroke-dasharray: 240;
      stroke-dashoffset: 40; }

@-webkit-keyframes rotating {
  from {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); } }

@keyframes rotating {
  from {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); } }

.progress-bar {
  margin-bottom: 40px;
  width: 100%;
  max-width: 694px;
  background-color: #ECF0F1; }
  .progress-bar > span {
    display: block;
    height: 6px; }
  .progress-bar .bottom {
    width: 0%;
    background-color: #000;
    -webkit-transition: width 270ms ease-out;
    -o-transition: width 270ms ease-out;
    transition: width 270ms ease-out; }
    .progress-bar .bottom.-ten {
      width: 10%; }
    .progress-bar .bottom.-twenty {
      width: 20%; }
    .progress-bar .bottom.-thirty {
      width: 30%; }
    .progress-bar .bottom.-forty {
      width: 40%; }
    .progress-bar .bottom.-fifty {
      width: 50%; }
    .progress-bar .bottom.-sixty {
      width: 60%; }
    .progress-bar .bottom.-seventy {
      width: 70%; }
    .progress-bar .bottom.-eighty {
      width: 80%; }
    .progress-bar .bottom.-ninety {
      width: 90%; }
    .progress-bar .bottom.-one-hundred {
      width: 100%; }

.skiplinks {
  padding: 0;
  margin: 0; }
  .skiplinks a {
    position: absolute;
    left: -1000px;
    z-index: 200;
    margin: 0;
    padding: .5em;
    background: #FFF;
    font-size: 200%;
    font-weight: bold;
    text-decoration: none; }
    .skiplinks a:active, .skiplinks a:focus, .skiplinks a:hover {
      display: inline;
      top: 0;
      left: 0;
      color: #FFF;
      background: #000; }

.chat-bubble .bot,
.chat-bubble .user {
  padding: 8px;
  border-radius: 4px; }

.chat-bubble .bot {
  float: right;
  background-color: #4990E2; }
  .chat-bubble .bot > .reply {
    color: #FFF;
    text-align: right; }

.chat-bubble .user {
  float: left;
  background-color: #FFF; }
  .chat-bubble .user > .reply {
    text-align: left; }

.conversation-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-flex: 5;
  -ms-flex: 5;
  flex: 5;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  overflow-y: scroll;
  padding: 10px;
  background-color: green; }
  .conversation-wrapper .conversation {
    margin-top: auto; }

.grid {
  position: relative;
  display: inline-block;
  width: 100%; }

.home {
  margin: 0 auto;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column; }
  .home::after {
    clear: both;
    content: "";
    display: block; }
  .home .chat {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-flex: 1;
    -ms-flex: 1;
    flex: 1; }
  .home .cta {
    -webkit-box-flex: 3;
    -ms-flex: 3;
    flex: 3; }

.item.quick-reply {
  height: 60px; }

h1 {
  font-size: 2.2rem; }

h2 {
  font-size: 1.8rem; }

p {
  font-size: 1.6rem;
  line-height: 1.4em; }

ol,
ul {
  font-size: 1.6rem;
  line-height: 1.4em; }

code {
  background-color: black;
  color: white;
  font-size: 1.4rem;
  padding: 2px 10px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9ub2RlLW5vcm1hbGl6ZS1zY3NzL19ub3JtYWxpemUuc2NzcyIsIm1haW4uY3NzIiwiYmFzZS9fX21peGlucy5zY3NzIiwiYmFzZS9fYW5pbWF0aW9ucy5zY3NzIiwiYmFzZS9fZWxldmF0aW9uLnNjc3MiLCJiYXNlL19sYXlvdXQuc2NzcyIsIm1haW4uc2NzcyIsImJhc2UvX3R5cG9ncmFwaHkuc2NzcyIsImNvbXBvbmVudHMvX2J1dHRvbi5zY3NzIiwiYmFzZS9fY29sb3Vycy5zY3NzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2JvdXJib24tbmVhdC9jb3JlL25lYXQvbWl4aW5zL19ncmlkLW1lZGlhLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvYm91cmJvbi1uZWF0L2NvcmUvbmVhdC9taXhpbnMvX2dyaWQtY29udGFpbmVyLnNjc3MiLCJjb21wb25lbnRzL19ncmlkLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvYm91cmJvbi1uZWF0L2NvcmUvbmVhdC9taXhpbnMvX2dyaWQtY29sdW1uLnNjc3MiLCIuLi8uLi9ub2RlX21vZHVsZXMvYm91cmJvbi1uZWF0L2NvcmUvbmVhdC9mdW5jdGlvbnMvX25lYXQtZmxvYXQtZGlyZWN0aW9uLnNjc3MiLCJjb21wb25lbnRzL19oZWFkZXIuc2NzcyIsImNvbXBvbmVudHMvX2xvYWRpbmcuc2NzcyIsImNvbXBvbmVudHMvX3Byb2dyZXNzLWJhci5zY3NzIiwiY29tcG9uZW50cy9fc2tpcGxpbmtzLnNjc3MiLCIuLi9jb21wb25lbnRzL2NoYXRidWJibGUvQ2hhdEJ1YmJsZS5zY3NzIiwiLi4vY29tcG9uZW50cy9jb252ZXJzYXRpb24vQ29udmVyc2F0aW9uLnNjc3MiLCIuLi9jb21wb25lbnRzL2dyaWQvR3JpZC5zY3NzIiwiLi4vY29tcG9uZW50cy9ob21lL0hvbWUuc2NzcyIsIi4uL2NvbXBvbmVudHMvaXRlbS9JdGVtLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFB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QkUsb0NBQW1EO01BQ25ELFlDcEIyQjtNRHFCM0Isa0JQaENZLEVNdUJYO0lBdkJIO01DOEJFLG9DQUFtRDtNQUNuRCxZQ3BCMkI7TURxQjNCLGtCUGhDWSxFTTJCWDtJQTNCSDtNQzhCRSx3QkFBbUQ7TUFDbkQsWUNwQjJCO01EcUIzQixrQlBoQ1ksRU0rQlg7SUEvQkg7TUM4QkUsb0NBQW1EO01BQ25ELFlDcEIyQjtNRHFCM0Isa0JQaENZLEVNbUNYO0lBbkNIO01DOEJFLG9DQUFtRDtNQUNuRCxZQ3BCMkI7TURxQjNCLGtCUGhDWSxFTXVDWDtJQXZDSDtNQzhCRSwwQkFBbUQ7TUFDbkQsWUNwQjJCO01EcUIzQixrQlBoQ1ksRU0yQ1g7SUEzQ0g7TUM4QkUsb0NBQW1EO01BQ25ELFlDcEIyQjtNRHFCM0Isa0JQaENZLEVNK0NYO0lBL0NIO01DOEJFLG9DQUFtRDtNQUNuRCxZQ3BCMkI7TURxQjNCLGtCUGhDWSxFTW1EWDtJQW5ESDtNQzhCRSx5QkFBbUQ7TUFDbkQsWUNwQjJCO01EcUIzQixrQlBoQ1ksRU11RFg7SUZBRDtNRXZERjtRQzhCRSwwQkFBbUQ7UUFDbkQsWUNwQjJCO1FEcUIzQixrQlB6QlcsRU0wRlg7UUFqR0Y7VUM4QkUsMEJBQW1EO1VBQ25ELFlDcEIyQjtVRHFCM0Isa0JQekJXLEVNMERUO1FBakVKO1VDOEJFLHlCQUFtRDtVQUNuRCxZQ3BCMkI7VURxQjNCLGtCUHpCVyxFTXFFVCxFQUFBO0lGckJGO01FdkRGO1FDOEJFLHlCQUFtRDtRQUNuRCxZQ3BCMkI7UURxQjNCLGtCUGpCVyxFTWtGWDtRQWpHRjtVQzhCRSx5QkFBbUQ7VUFDbkQsWUNwQjJCO1VEcUIzQixrQlBqQlcsRU1nRlQsRUFBQTs7QUdwR0o7RUFDQyxnQkFBZTtFQUNmLE9BQU07RUFDTixZQUFXO0VBQ1gsYUFBWTtFQUNaLGVBQWM7RUFFZCxZTkdhO0VNRmIsdUJOR2EsRU13RGI7RUFuRUQ7SUFXRSxhQUFZLEVBQ1o7RUFaRjtJQWVFLFVBQVM7SUFDVCxXQUFVO0lBQ1Ysa0JBQWlCLEVBQ2pCO0VBbEJGO0lBcUJF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QUFzQjtFQUF0Qix1QkFBc0I7RUFDdEIsbUJBQWtCO0VBRWxCLGNBQWE7RUFDYix3QkFBdUIsRUFLdkI7RUFaRDtJQVVFLGlCQUFnQixFQUNoQjs7QUNYRjtFQUNDLG1CQUFrQjtFQUNsQixzQkFBcUI7RUFDckIsWUFBVyxFQUNYOztBQ0pEO0VBRUMsZUFBYztFQUNkLCtCQUFzQjtFQUF0Qix1QkFBc0I7RUFFdEIsY0FBYTtFQUNiLHFCQUFhO0VBQWIscUJBQWE7RUFBYixjQUFhO0VBQ2IsNkJBQXNCO0VBQXRCLDhCQUFzQjtFQUF0QiwyQkFBc0I7RUFBdEIsdUJBQXNCLEVBV3RCO0VYT0M7SUFDRSxZQUFXO0lBQ1gsWUFBVztJQUNYLGVBQWMsRUFDZjtFVzdCSDtJQVVFLHFCQUFhO0lBQWIscUJBQWE7SUFBYixjQUFhO0lBQ2IsNkJBQXNCO0lBQXRCLDhCQUFzQjtJQUF0QiwyQkFBc0I7SUFBdEIsdUJBQXNCO0lBQ3RCLG9CQUFPO0lBQVAsWUFBTztJQUFQLFFBQU8sRUFDUDtFQWJGO0lBZ0JFLG9CQUFPO0lBQVAsWUFBTztJQUFQLFFBQU8sRUFDUDs7QUNqQkY7RUFFRSxhQUFZLEVBQ1o7O0FqQnlERjtFQUNDLGtCQUFpQixFQUNqQjs7QUFFRDtFQUNDLGtCQUFpQixFQUNqQjs7QUFFRDtFQUNDLGtCQUFpQjtFQUNqQixtQkFBa0IsRUFDbEI7O0FBRUQ7O0VBRUMsa0JBQWlCO0VBQ2pCLG1CQUFrQixFQUNsQjs7QUFFRDtFQUNDLHdCQUF1QjtFQUN2QixhQUFZO0VBQ1osa0JBQWlCO0VBRWpCLGtCQUFpQixFQUNqQiIsImZpbGUiOiJtYWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuY3NzIHY3LjAuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpblxuICogICAgSUUgb24gV2luZG93cyBQaG9uZSBhbmQgaW4gaU9TLlxuICovXG5cbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5mb290ZXIsXG5oZWFkZXIsXG5uYXYsXG5zZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbm1haW4geyAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctIGFuZCBGaXJlZm94IDM5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXG4gKi9cblxuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBiYWNrZ3JvdW5kIGFuZCBjb2xvciBpbiBJRSA5LS5cbiAqL1xuXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc21hbGwge1xuICBmb250LXNpemU6IDgwJTtcbn1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07XG59XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmF1ZGlvLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cblxuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cbiAgbWFyZ2luOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5cbmJ1dHRvbixcbmlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sXG5zZWxlY3QgeyAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIFByZXZlbnQgYSBXZWJLaXQgYnVnIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYCBhbmQgYHZpZGVvYFxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxuICogMi4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqL1xuXG5kZXRhaWxzLCAvKiAxICovXG5tZW51IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogU2NyaXB0aW5nXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmNhbnZhcyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIEhpZGRlblxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjcuMC4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW5cbiAqICAgIElFIG9uIFdpbmRvd3MgUGhvbmUgYW5kIGluIGlPUy5cbiAqL1xuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5mb290ZXIsXG5oZWFkZXIsXG5uYXYsXG5zZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5tYWluIHtcbiAgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LSBhbmQgRmlyZWZveCAzOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0OyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5hdWRpbyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbnByb2dyZXNzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRS5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLS5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXG4gKi9cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgYW5kIGNhbmNlbCBidXR0b25zIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi8gfVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqL1xuZGV0YWlscyxcbm1lbnUge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtOyB9XG5cbi8qIFNjcmlwdGluZ1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cbmNhbnZhcyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogSGlkZGVuXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiBSZXNldCB1bm9yZGVyZWQgbGlzdCBzdHlsZSAqL1xuLmFuaW1hdGUge1xuICB0cmFuc2l0aW9uOiBhbGwgMzkwbXMgZWFzZS1vdXQ7IH1cblxuLmUtaG92ZXItcmFpc2VkOmhvdmVyIHtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01cHgpO1xuICBib3gtc2hhZG93OiAwIDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjE2KSwgMCAzcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4yMyk7IH1cblxuLmUtaG92ZXItZmxvYXRpbmc6aG92ZXIge1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTVweCk7XG4gIGJveC1zaGFkb3c6IDAgMTRweCAyOHB4IHJnYmEoMCwgMCwgMCwgMC4yNSksIDAgMTBweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yMik7IH1cblxuLmUtcmFpc2VkIHtcbiAgYm94LXNoYWRvdzogMCAzcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xNiksIDAgM3B4IDZweCByZ2JhKDAsIDAsIDAsIDAuMjMpOyB9XG5cbi5lLWZsb2F0aW5nIHtcbiAgYm94LXNoYWRvdzogMCAxNHB4IDI4cHggcmdiYSgwLCAwLCAwLCAwLjI1KSwgMCAxMHB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjIyKTsgfVxuXG5ib2R5LFxuaHRtbCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwOyB9XG5cbi5jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiA4MDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuXG4ubWFyZ2luLWJvdHRvbS0zMCB7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7IH1cblxuLyogb3BlbiBzYW5zIC0gbGlnaHQgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ29wZW5zYW5zLWxpZ2h0JztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogMzAwO1xuICBzcmM6IGxvY2FsKFwiT3BlblNhbnMgTGlnaHRcIiksIGxvY2FsKFwiT3BlblNhbnMtTGlnaHRcIiksIHVybChcIi9zdHlsZXMvZm9udHMvT3BlblNhbnMtTGlnaHQudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpOyB9XG5cbi8qIG9wZW4gc2FucyAtIG1lZGl1bSAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnb3BlbnNhbnMtbWVkaXVtJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNTAwO1xuICBzcmM6IGxvY2FsKFwiT3BlblNhbnMgTWVkaXVtXCIpLCBsb2NhbChcIk9wZW5TYW5zLU1lZGl1bVwiKSwgdXJsKFwiL3N0eWxlcy9mb250cy9PcGVuU2Fucy1NZWRpdW0udHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpOyB9XG5cbi8qIG9wZW4gc2FucyAtIHJlZ3VsYXIgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ29wZW5zYW5zLXJlZ3VsYXInO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHNyYzogbG9jYWwoXCJPcGVuU2FucyBSZWd1bGFyXCIpLCBsb2NhbChcIk9wZW5TYW5zLVJlZ3VsYXJcIiksIHVybChcIi9zdHlsZXMvZm9udHMvT3BlblNhbnMtUmVndWxhci50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7IH1cblxuLyogb3BlbiBzYW5zIC0gYm9sZCAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnb3BlbnNhbnMtYm9sZCc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgc3JjOiBsb2NhbChcIk9wZW5TYW5zIEJvbGRcIiksIGxvY2FsKFwiT3BlblNhbnMtQm9sZFwiKSwgdXJsKFwiL3N0eWxlcy9mb250cy9PcGVuU2Fucy1Cb2xkLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTsgfVxuXG4vKiBvcGVuIHNhbnMgLSBzZW1pYm9sZCAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnb3BlbnNhbnMtc2VtaWJvbGQnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHNyYzogbG9jYWwoXCJPcGVuU2FucyBTZW1pQm9sZFwiKSwgbG9jYWwoXCJPcGVuU2Fucy1TZW1pQm9sZFwiKSwgdXJsKFwiL3N0eWxlcy9mb250cy9PcGVuU2Fucy1TZW1pQm9sZC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7IH1cblxuLyogb3BlbiBzYW5zIC0gZXh0cmFib2xkICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdvcGVuc2Fucy1leHRyYWJvbGQnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHNyYzogbG9jYWwoXCJPcGVuU2FucyBFeHRyYUJvbGRcIiksIGxvY2FsKFwiT3BlblNhbnMtRXh0cmFCb2xkXCIpLCB1cmwoXCIvc3R5bGVzL2ZvbnRzL09wZW5TYW5zLUV4dHJhQm9sZC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7IH1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogNjIuNSU7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlOyB9XG5cbmJvZHkge1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsgfVxuXG5hIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG5sYWJlbCxcbmJ1dHRvbixcbmEsXG50ZCB7XG4gIGZvbnQtZmFtaWx5OiAnb3BlbnNhbnMtcmVndWxhcicsIHNhbnMtc2VyaWY7IH1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2LFxucCB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDsgfVxuXG5oMSB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIGZvbnQtZmFtaWx5OiAnb3BlbnNhbnMtYm9sZCcsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogNy44cmVtOyB9XG5cbmgyIHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgZm9udC1mYW1pbHk6ICdvcGVuc2Fucy1zZW1pYm9sZCcsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgbGluZS1oZWlnaHQ6IDQwcHg7IH1cblxuaDMge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBmb250LWZhbWlseTogJ29wZW5zYW5zLXNlbWlib2xkJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxLjdyZW07XG4gIGxpbmUtaGVpZ2h0OiAyMHB4OyB9XG5cbnAge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtZmFtaWx5OiAnb3BlbnNhbnMtcmVndWxhcicsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBsaW5lLWhlaWdodDogMS40OyB9XG5cbmNvZGUge1xuICBmb250LXNpemU6IDEuMnJlbTtcbiAgd2hpdGUtc3BhY2U6IHByZS13cmFwICFpbXBvcnRhbnQ7IH1cblxuLmJ1dHRvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBsaW5lLWhlaWdodDogbm9ybWFsO1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgcGFkZGluZzogMDtcbiAgd2lkdGg6IDIwMHB4O1xuICBoZWlnaHQ6IDYwcHg7XG4gIGZvbnQtc2l6ZTogMnJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0JEQzNDNztcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAyOTBtcyBlYXNlLWluO1xuICBib3JkZXI6IDA7IH1cbiAgLmJ1dHRvbjpob3ZlciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ExYWFiMDsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgLmJ1dHRvbiB7XG4gICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDIyNW1zIGVhc2UtaW47IH0gfVxuICAuYnV0dG9uLnByaW1hcnkge1xuICAgIGNvbG9yOiAjRkZGO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0OTkwRTI7IH1cbiAgICAuYnV0dG9uLnByaW1hcnk6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzIyNzZkNjsgfVxuICAuYnV0dG9uLnNlY29uZGFyeSB7XG4gICAgY29sb3I6ICNGRkY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJFQ0M3MTsgfVxuICAgIC5idXR0b24uc2Vjb25kYXJ5OmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMyNWEyNWE7IH1cbiAgLmJ1dHRvbi5yYWlzZWQge1xuICAgIGJveC1zaGFkb3c6IDAgM3B4IDZweCByZ2JhKDAsIDAsIDAsIDAuMTYpLCAwIDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjIzKTsgfVxuICAuYnV0dG9uLmZsb2F0aW5nIHtcbiAgICBib3gtc2hhZG93OiAwIDE0cHggMjhweCByZ2JhKDAsIDAsIDAsIDAuMjUpLCAwIDEwcHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMjIpOyB9XG5cbi5ncmlkLWNvbnRhaW5lcjo6YWZ0ZXIge1xuICBjbGVhcjogYm90aDtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLmdyaWQge1xuICBtYXgtd2lkdGg6IDgwMHB4OyB9XG4gIC5ncmlkID4gLml0ZW0ge1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDIwcHgpO1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4OyB9XG4gICAgLmdyaWQgPiAuaXRlbS4tb25lIHtcbiAgICAgIHdpZHRoOiBjYWxjKDguMzMzMzMlIC0gMTAuODMzMzNweCk7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4OyB9XG4gICAgLmdyaWQgPiAuaXRlbS4tdHdvIHtcbiAgICAgIHdpZHRoOiBjYWxjKDE2LjY2NjY3JSAtIDExLjY2NjY3cHgpO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW4tbGVmdDogMTBweDsgfVxuICAgIC5ncmlkID4gLml0ZW0uLXRocmVlIHtcbiAgICAgIHdpZHRoOiBjYWxjKDI1JSAtIDEyLjVweCk7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4OyB9XG4gICAgLmdyaWQgPiAuaXRlbS4tZm91ciB7XG4gICAgICB3aWR0aDogY2FsYygzMy4zMzMzMyUgLSAxMy4zMzMzM3B4KTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7IH1cbiAgICAuZ3JpZCA+IC5pdGVtLi1maXZlIHtcbiAgICAgIHdpZHRoOiBjYWxjKDQxLjY2NjY3JSAtIDE0LjE2NjY3cHgpO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW4tbGVmdDogMTBweDsgfVxuICAgIC5ncmlkID4gLml0ZW0uLXNpeCB7XG4gICAgICB3aWR0aDogY2FsYyg1MCUgLSAxNXB4KTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7IH1cbiAgICAuZ3JpZCA+IC5pdGVtLi1zZXZlbiB7XG4gICAgICB3aWR0aDogY2FsYyg1OC4zMzMzMyUgLSAxNS44MzMzM3B4KTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7IH1cbiAgICAuZ3JpZCA+IC5pdGVtLi1laWdodCB7XG4gICAgICB3aWR0aDogY2FsYyg2Ni42NjY2NyUgLSAxNi42NjY2N3B4KTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7IH1cbiAgICAuZ3JpZCA+IC5pdGVtLi1uaW5lIHtcbiAgICAgIHdpZHRoOiBjYWxjKDc1JSAtIDE3LjVweCk7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4OyB9XG4gICAgLmdyaWQgPiAuaXRlbS4tdGVuIHtcbiAgICAgIHdpZHRoOiBjYWxjKDgzLjMzMzMzJSAtIDE4LjMzMzMzcHgpO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW4tbGVmdDogMTBweDsgfVxuICAgIC5ncmlkID4gLml0ZW0uLWVsZXZlbiB7XG4gICAgICB3aWR0aDogY2FsYyg5MS42NjY2NyUgLSAxOS4xNjY2N3B4KTtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7IH1cbiAgICAuZ3JpZCA+IC5pdGVtLi10d2VsdmUge1xuICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDIwcHgpO1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW4tbGVmdDogMTBweDsgfVxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAwMHB4KSB7XG4gICAgICAuZ3JpZCA+IC5pdGVtIHtcbiAgICAgICAgd2lkdGg6IGNhbGMoNTAlIC0gMS41cmVtKTtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxcmVtOyB9XG4gICAgICAgIC5ncmlkID4gLml0ZW0uLW9uZSwgLmdyaWQgPiAuaXRlbS4tdHdvLCAuZ3JpZCA+IC5pdGVtLi10aHJlZSwgLmdyaWQgPiAuaXRlbS4tZm91ciB7XG4gICAgICAgICAgd2lkdGg6IGNhbGMoNTAlIC0gMS41cmVtKTtcbiAgICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgICBtYXJnaW4tbGVmdDogMXJlbTsgfVxuICAgICAgICAuZ3JpZCA+IC5pdGVtLi1maXZlLCAuZ3JpZCA+IC5pdGVtLi1zaXgsIC5ncmlkID4gLml0ZW0uLXNldmVuLCAuZ3JpZCA+IC5pdGVtLi1laWdodCwgLmdyaWQgPiAuaXRlbS4tbmluZSwgLmdyaWQgPiAuaXRlbS4tdGVuLCAuZ3JpZCA+IC5pdGVtLi1lbGV2ZW4sIC5ncmlkID4gLml0ZW0uLXR3ZWx2ZSB7XG4gICAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDJyZW0pO1xuICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxcmVtOyB9IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgICAuZ3JpZCA+IC5pdGVtIHtcbiAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDJyZW0pO1xuICAgICAgICBmbG9hdDogbGVmdDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDFyZW07IH1cbiAgICAgICAgLmdyaWQgPiAuaXRlbS4tb25lLCAuZ3JpZCA+IC5pdGVtLi10d28sIC5ncmlkID4gLml0ZW0uLXRocmVlLCAuZ3JpZCA+IC5pdGVtLi1mb3VyLCAuZ3JpZCA+IC5pdGVtLi1maXZlLCAuZ3JpZCA+IC5pdGVtLi1zaXgsIC5ncmlkID4gLml0ZW0uLXNldmVuLCAuZ3JpZCA+IC5pdGVtLi1laWdodCwgLmdyaWQgPiAuaXRlbS4tbmluZSwgLmdyaWQgPiAuaXRlbS4tdGVuLCAuZ3JpZCA+IC5pdGVtLi1lbGV2ZW4sIC5ncmlkID4gLml0ZW0uLXR3ZWx2ZSB7XG4gICAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDJyZW0pO1xuICAgICAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxcmVtOyB9IH1cblxuLmhlYWRlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA2MHB4O1xuICB6LWluZGV4OiA5OTk5OTtcbiAgY29sb3I6ICMwMDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGRkY7IH1cbiAgLmhlYWRlciAubGlua3Mge1xuICAgIGZsb2F0OiByaWdodDsgfVxuICAuaGVhZGVyIC5saW5rLWxpc3Qge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGxpbmUtaGVpZ2h0OiA2MHB4OyB9XG4gIC5oZWFkZXIgLmxpbmsge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW4tbGVmdDogMTBweDsgfVxuICAgIC5oZWFkZXIgLmxpbmsgPiBhIHtcbiAgICAgIGZvbnQtZmFtaWx5OiAnb3BlbnNhbnMtc2VtaWJvbGQnLCBzYW5zLXNlcmlmO1xuICAgICAgZm9udC1zaXplOiAxLjhyZW07XG4gICAgICB0cmFuc2l0aW9uOiBjb2xvciAyOTBtcyBlYXNlLW91dDsgfVxuICAgICAgLmhlYWRlciAubGluayA+IGE6aG92ZXIsIC5oZWFkZXIgLmxpbmsgPiBhOmFjdGl2ZSB7XG4gICAgICAgIGNvbG9yOiAjNGQ0ZDRkOyB9XG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDgwMHB4KSB7XG4gICAgICAgIC5oZWFkZXIgLmxpbmsgPiBhIHtcbiAgICAgICAgICBmb250LXNpemU6IDEuNHJlbTsgfSB9XG4gICAgLmhlYWRlciAubGluazpsYXN0LW9mLXR5cGUge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4OyB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4MDBweCkge1xuICAgICAgLmhlYWRlciAubGluayB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuICAuaGVhZGVyIC5saW5rLWhvbWUge1xuICAgIGZvbnQtZmFtaWx5OiAnb3BlbnNhbnMtZXh0cmFib2xkJywgc2Fucy1zZXJpZjtcbiAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICBmb250LXNpemU6IDEuOHJlbTtcbiAgICBsaW5lLWhlaWdodDogNjBweDtcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAyOTBtcyBlYXNlLW91dDsgfVxuICAgIC5oZWFkZXIgLmxpbmstaG9tZTpob3ZlciwgLmhlYWRlciAubGluay1ob21lOmFjdGl2ZSB7XG4gICAgICBjb2xvcjogIzRkNGQ0ZDsgfVxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogODAwcHgpIHtcbiAgICAgIC5oZWFkZXIgLmxpbmstaG9tZSB7XG4gICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtOyB9IH1cblxuLmxvYWRpbmctb3ZlcmxheSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgei1pbmRleDogOTk5OTk7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IGFsbCAyNTBtcyBlYXNlLWluOyB9XG4gIC5sb2FkaW5nLW92ZXJsYXkuLXZpc2libGUge1xuICAgIG9wYWNpdHk6IDAuNTsgfVxuICAubG9hZGluZy1vdmVybGF5IC5sb2FkaW5nIHtcbiAgICB3aWR0aDogMTAuNXJlbTtcbiAgICBoZWlnaHQ6IDEwLjVyZW07IH1cbiAgICAubG9hZGluZy1vdmVybGF5IC5sb2FkaW5nIC5sb2FkaW5nLXN2ZyB7XG4gICAgICBhbmltYXRpb246IHJvdGF0aW5nIDFzIGxpbmVhciBpbmZpbml0ZTtcbiAgICAgIGZpbGw6IHRyYW5zcGFyZW50O1xuICAgICAgc3Ryb2tlOiAjMDAwO1xuICAgICAgc3Ryb2tlLXdpZHRoOiA3O1xuICAgICAgc3Ryb2tlLWxpbmVjYXA6IGJ1dHQ7XG4gICAgICBzdHJva2UtZGFzaGFycmF5OiAyNDA7XG4gICAgICBzdHJva2UtZGFzaG9mZnNldDogNDA7IH1cblxuQGtleWZyYW1lcyByb3RhdGluZyB7XG4gIGZyb20ge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XG4gIHRvIHtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB9IH1cblxuLnByb2dyZXNzLWJhciB7XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDY5NHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRUNGMEYxOyB9XG4gIC5wcm9ncmVzcy1iYXIgPiBzcGFuIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IDZweDsgfVxuICAucHJvZ3Jlc3MtYmFyIC5ib3R0b20ge1xuICAgIHdpZHRoOiAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwO1xuICAgIHRyYW5zaXRpb246IHdpZHRoIDI3MG1zIGVhc2Utb3V0OyB9XG4gICAgLnByb2dyZXNzLWJhciAuYm90dG9tLi10ZW4ge1xuICAgICAgd2lkdGg6IDEwJTsgfVxuICAgIC5wcm9ncmVzcy1iYXIgLmJvdHRvbS4tdHdlbnR5IHtcbiAgICAgIHdpZHRoOiAyMCU7IH1cbiAgICAucHJvZ3Jlc3MtYmFyIC5ib3R0b20uLXRoaXJ0eSB7XG4gICAgICB3aWR0aDogMzAlOyB9XG4gICAgLnByb2dyZXNzLWJhciAuYm90dG9tLi1mb3J0eSB7XG4gICAgICB3aWR0aDogNDAlOyB9XG4gICAgLnByb2dyZXNzLWJhciAuYm90dG9tLi1maWZ0eSB7XG4gICAgICB3aWR0aDogNTAlOyB9XG4gICAgLnByb2dyZXNzLWJhciAuYm90dG9tLi1zaXh0eSB7XG4gICAgICB3aWR0aDogNjAlOyB9XG4gICAgLnByb2dyZXNzLWJhciAuYm90dG9tLi1zZXZlbnR5IHtcbiAgICAgIHdpZHRoOiA3MCU7IH1cbiAgICAucHJvZ3Jlc3MtYmFyIC5ib3R0b20uLWVpZ2h0eSB7XG4gICAgICB3aWR0aDogODAlOyB9XG4gICAgLnByb2dyZXNzLWJhciAuYm90dG9tLi1uaW5ldHkge1xuICAgICAgd2lkdGg6IDkwJTsgfVxuICAgIC5wcm9ncmVzcy1iYXIgLmJvdHRvbS4tb25lLWh1bmRyZWQge1xuICAgICAgd2lkdGg6IDEwMCU7IH1cblxuLnNraXBsaW5rcyB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDsgfVxuICAuc2tpcGxpbmtzIGEge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAtMTAwMHB4O1xuICAgIHotaW5kZXg6IDIwMDtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogLjVlbTtcbiAgICBiYWNrZ3JvdW5kOiAjRkZGO1xuICAgIGZvbnQtc2l6ZTogMjAwJTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgICAuc2tpcGxpbmtzIGE6YWN0aXZlLCAuc2tpcGxpbmtzIGE6Zm9jdXMsIC5za2lwbGlua3MgYTpob3ZlciB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgICB0b3A6IDA7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgY29sb3I6ICNGRkY7XG4gICAgICBiYWNrZ3JvdW5kOiAjMDAwOyB9XG5cbi5jaGF0LWJ1YmJsZSAuYm90LFxuLmNoYXQtYnViYmxlIC51c2VyIHtcbiAgcGFkZGluZzogOHB4O1xuICBib3JkZXItcmFkaXVzOiA0cHg7IH1cblxuLmNoYXQtYnViYmxlIC5ib3Qge1xuICBmbG9hdDogcmlnaHQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0OTkwRTI7IH1cbiAgLmNoYXQtYnViYmxlIC5ib3QgPiAucmVwbHkge1xuICAgIGNvbG9yOiAjRkZGO1xuICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9XG5cbi5jaGF0LWJ1YmJsZSAudXNlciB7XG4gIGZsb2F0OiBsZWZ0O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGOyB9XG4gIC5jaGF0LWJ1YmJsZSAudXNlciA+IC5yZXBseSB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuXG4uY29udmVyc2F0aW9uLXdyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4OiA1O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IGdyZWVuOyB9XG4gIC5jb252ZXJzYXRpb24td3JhcHBlciAuY29udmVyc2F0aW9uIHtcbiAgICBtYXJnaW4tdG9wOiBhdXRvOyB9XG5cbi5ncmlkIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5ob21lIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGhlaWdodDogMTAwdmg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cbiAgLmhvbWU6OmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIC5ob21lIC5jaGF0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZmxleDogMTsgfVxuICAuaG9tZSAuY3RhIHtcbiAgICBmbGV4OiAzOyB9XG5cbi5pdGVtLnF1aWNrLXJlcGx5IHtcbiAgaGVpZ2h0OiA2MHB4OyB9XG5cbmgxIHtcbiAgZm9udC1zaXplOiAyLjJyZW07IH1cblxuaDIge1xuICBmb250LXNpemU6IDEuOHJlbTsgfVxuXG5wIHtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjRlbTsgfVxuXG5vbCxcbnVsIHtcbiAgZm9udC1zaXplOiAxLjZyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjRlbTsgfVxuXG5jb2RlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC1zaXplOiAxLjRyZW07XG4gIHBhZGRpbmc6IDJweCAxMHB4OyB9XG4iLCIvLyBpbmxpbmUtYmxvY2sgbGlzdFxuQG1peGluIGlubGluZS1ibG9jay1saXN0KCRwYWRkaW5nOiBmYWxzZSkge1xuXHRtYXJnaW46IDA7XG4gIFx0cGFkZGluZzogMDtcbiAgXHRib3JkZXI6IDA7XG4gIFx0QGluY2x1ZGUgY2xlYXJmaXg7XG5cbiAgXHRsaSB7XG4gIFx0XHRsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIFx0XHRAaW5jbHVkZSBpbmxpbmUtYmxvY2soKTtcbiAgXHRcdHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIFx0XHRAaWYgJHBhZGRpbmcge1xuICAgIFx0XHRwYWRkaW5nOiB7XG4gICAgICBcdFx0XHRsZWZ0OiAkcGFkZGluZztcbiAgICAgIFx0XHRcdHJpZ2h0OiAkcGFkZGluZztcbiAgICBcdFx0fTtcbiAgXHRcdH1cbiAgXHR9XG59XG5cbkBtaXhpbiBvbWVnYS1yZXNldCgkbnRoKSB7XG4gICY6bnRoLWNoaWxkKCN7JG50aH0pIHsgbWFyZ2luLXJpZ2h0OiBmbGV4LWd1dHRlcigpOyB9XG4gICY6bnRoLWNoaWxkKCN7JG50aH0rMSkgeyBjbGVhcjogbm9uZSB9XG59XG5cbi8vIGlubGluZS1ibG9jayBmb3Igb2xkIGJyb3dzZXJzXG5AbWl4aW4gaW5saW5lLWJsb2NrKCkge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdCp6b29tOiAxO1xuICAqZGlzcGxheTogaW5saW5lO1xufVxuXG5AbWl4aW4gcmVzZXQtYm94LW1vZGVsIHtcblx0bWFyZ2luOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRib3JkZXI6IDA7XG59XG5cbkBtaXhpbiBhYnNvbHV0ZS1maWxsIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbkBtaXhpbiBoZWFkaW5ncygkZnJvbTogMSwgJHRvOiA2KXtcbiAgQGZvciAkaSBmcm9tICRmcm9tIHRocm91Z2ggJHRve1xuICAgIGgjeyRpfXtcbiAgICAgQGNvbnRlbnRcbiAgICB9XG4gIH1cbn1cblxuQG1peGluIGJhY2tncm91bmQtaW1hZ2UoJHBhdGgpIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uL2ltZy8jeyRwYXRofS5wbmcpO1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodHJhbnNwYXJlbnQsIHRyYW5zcGFyZW50KSwgdXJsKC4uL2ltZy8jeyRwYXRofS5zdmcpO1xufVxuXG4vKiBSZXNldCB1bm9yZGVyZWQgbGlzdCBzdHlsZSAqL1xuQG1peGluIHJlc2V0LXVsIHtcblx0bGlzdC1zdHlsZS10eXBlOiBub25lO1xuXHRtYXJnaW46IDA7XG5cdHBhZGRpbmc6IDA7XG5cdG92ZXJmbG93OiBhdXRvO1xufVxuXG5AbWl4aW4gaGlkZS10ZXh0IHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1pbmRlbnQ6IDEwMSU7XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG59XG5cblxuXHQvLyBzd2FwcyBuZWF0IDIuMCB0byBkZXNrdG9wIGZpcnN0XG5cdEBmdW5jdGlvbiBfbmVhdC1wYXJzZS1tZWRpYSgkbWVkaWEpIHtcblx0ICBAaWYgdHlwZS1vZigkbWVkaWEpID09IG51bWJlciB7XG5cdCAgICBAcmV0dXJuIFwib25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICN7JG1lZGlhfSlcIjtcblx0ICB9IEBlbHNlIGlmIHR5cGUtb2YoJG1lZGlhKSA9PSBzdHJpbmcge1xuXHQgICAgQHJldHVybiBcIiN7JG1lZGlhfVwiO1xuXHQgIH1cblx0fVxuXG4iLCIkYS1kZXNrdG9wOiAzOTBtcztcbiRhLWRlc2t0b3AtZW50ZXI6IDI5MG1zO1xuJGEtZGVza3RvcC1leGl0OiAyNTBtcztcblxuJGEtbW9iaWxlOiAzMDBtcztcbiRhLW1vYmlsZS1lbnRlcjogMjI1bXM7XG4kYS1tb2JpbGUtZXhpdDogMTk1bXM7XG5cbi5hbmltYXRlIHtcblx0dHJhbnNpdGlvbjogYWxsICRhLWRlc2t0b3AgZWFzZS1vdXQ7XG59XG4iLCIkZS0xMDA6IDAgMTRweCAyOHB4IHJnYmEoMCwwLDAsMC4yNSksIDAgMTBweCAxMHB4IHJnYmEoMCwwLDAsMC4yMik7XG4kZS0yMDA6IDAgM3B4IDZweCByZ2JhKDAsMCwwLDAuMTYpLCAwIDNweCA2cHggcmdiYSgwLDAsMCwwLjIzKTtcbiRlLTMwMDogMCAxMHB4IDIwcHggcmdiYSgwLDAsMCwwLjE5KSwgMCA2cHggNnB4IHJnYmEoMCwwLDAsMC4yMyk7XG4kZS00MDA6IDAgMTRweCAyOHB4IHJnYmEoMCwwLDAsMC4yNSksIDAgMTBweCAxMHB4IHJnYmEoMCwwLDAsMC4yMik7XG4kZS01MDA6IDAgMTlweCAzOHB4IHJnYmEoMCwwLDAsMC4zMCksIDAgMTVweCAxMnB4IHJnYmEoMCwwLDAsMC4yMik7XG5cbiRlLXJhaXNlZDogJGUtMjAwO1xuJGUtZmxvYXRpbmc6ICRlLTQwMDtcblxuLmUtaG92ZXItcmFpc2VkIHtcblx0Jjpob3ZlciB7XG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01cHgpO1xuXHRcdGJveC1zaGFkb3c6ICRlLXJhaXNlZDtcblx0fVxufVxuXG4uZS1ob3Zlci1mbG9hdGluZyB7XG5cdCY6aG92ZXIge1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNXB4KTtcblx0XHRib3gtc2hhZG93OiAkZS1mbG9hdGluZztcblx0fVxufVxuXG4uZS1yYWlzZWQge1xuXHRib3gtc2hhZG93OiAkZS1yYWlzZWQ7XG59XG5cbi5lLWZsb2F0aW5nIHtcblx0Ym94LXNoYWRvdzogJGUtZmxvYXRpbmc7XG59XG4iLCJib2R5LFxuaHRtbCB7XG4gIEBpbmNsdWRlIHJlc2V0LWJveC1tb2RlbDtcbn1cblxuLmNvbnRhaW5lciB7XG5cdHdpZHRoOiAxMDAlO1xuXHRtYXgtd2lkdGg6ICRtYXgtd2lkdGg7XG5cdG1hcmdpbjogMCBhdXRvO1xuXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLm1hcmdpbi1ib3R0b20tMzAge1xuXHRtYXJnaW4tYm90dG9tOiAzMHB4O1xufVxuIiwiLy8gR3JpZCBzZXR0aW5nc1xuJG1heC13aWR0aDogODAwcHg7XG5cbiRuZWF0LWdyaWQ6IChcbiAgY29sdW1uczogMTIsXG4gIGd1dHRlcjogMTBweCxcbiAgY29sb3I6IHJnYmEoIzAwZDRmZiwgMC4yNSksXG4gIGRpcmVjdGlvbjogbHRyXG4pO1xuXG4kdGFibGV0OiAoXG5cdGNvbHVtbnM6IDQsXG5cdGd1dHRlcjogMXJlbSxcblx0Y29sb3I6IHJnYmEoIzAwZDRmZiwgMC4yNSksXG5cdGRpcmVjdGlvbjogbHRyLFxuXHRtZWRpYTogMTAwMHB4XG4pO1xuXG4kbW9iaWxlOiAoXG5cdGNvbHVtbnM6IDQsXG5cdGd1dHRlcjogMXJlbSxcblx0Y29sb3I6IHJnYmEoIzAwZDRmZiwgMC4yNSksXG5cdGRpcmVjdGlvbjogbHRyLFxuXHRtZWRpYTogODAwcHhcbik7XG5cbkBpbXBvcnQgJ25vcm1hbGl6ZSc7XG5cbkBpbXBvcnQgJ25lYXQnO1xuXG5cblxuLy8gVmFyaWFibGVzXG5AaW1wb3J0IFwiYmFzZS9fX21peGlucy5zY3NzXCI7XG5AaW1wb3J0IFwiYmFzZS9fYW5pbWF0aW9ucy5zY3NzXCI7XG5AaW1wb3J0IFwiYmFzZS9fYnJlYWtwb2ludHMuc2Nzc1wiO1xuQGltcG9ydCBcImJhc2UvX2NvbG91cnMuc2Nzc1wiO1xuQGltcG9ydCBcImJhc2UvX2VsZXZhdGlvbi5zY3NzXCI7XG5AaW1wb3J0IFwiYmFzZS9faWNvbnMuc2Nzc1wiO1xuQGltcG9ydCBcImJhc2UvX2xheW91dC5zY3NzXCI7XG5AaW1wb3J0IFwiYmFzZS9fdHlwb2dyYXBoeS5zY3NzXCI7XG5cbi8vIENvbXBvbmVudHNcbkBpbXBvcnQgXCJjb21wb25lbnRzL19idXR0b24uc2Nzc1wiO1xuQGltcG9ydCBcImNvbXBvbmVudHMvX2dyaWQuc2Nzc1wiO1xuQGltcG9ydCBcImNvbXBvbmVudHMvX2hlYWRlci5zY3NzXCI7XG5AaW1wb3J0IFwiY29tcG9uZW50cy9fbG9hZGluZy5zY3NzXCI7XG5AaW1wb3J0IFwiY29tcG9uZW50cy9fcHJvZ3Jlc3MtYmFyLnNjc3NcIjtcbkBpbXBvcnQgXCJjb21wb25lbnRzL19za2lwbGlua3Muc2Nzc1wiO1xuQGltcG9ydCBcInNlY3Rpb25zL19ob21lLnNjc3NcIjtcblxuQGltcG9ydCBcIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZW5uaXMtZG9lcy1jaGF0L3NyYy9jb21wb25lbnRzL2NoYXRidWJibGUvQ2hhdEJ1YmJsZS5zY3NzXCI7XG5AaW1wb3J0IFwiL1VzZXJzL29rZWVmZmVfZC9Qcm9qZWN0LUltcG9zdGVyL2Rlbm5pcy1kb2VzLWNoYXQvc3JjL2NvbXBvbmVudHMvY29udmVyc2F0aW9uL0NvbnZlcnNhdGlvbi5zY3NzXCI7XG5AaW1wb3J0IFwiL1VzZXJzL29rZWVmZmVfZC9Qcm9qZWN0LUltcG9zdGVyL2Rlbm5pcy1kb2VzLWNoYXQvc3JjL2NvbXBvbmVudHMvZ3JpZC9HcmlkLnNjc3NcIjtcbkBpbXBvcnQgXCIvVXNlcnMvb2tlZWZmZV9kL1Byb2plY3QtSW1wb3N0ZXIvZGVubmlzLWRvZXMtY2hhdC9zcmMvY29tcG9uZW50cy9ob21lL0hvbWUuc2Nzc1wiO1xuQGltcG9ydCBcIi9Vc2Vycy9va2VlZmZlX2QvUHJvamVjdC1JbXBvc3Rlci9kZW5uaXMtZG9lcy1jaGF0L3NyYy9jb21wb25lbnRzL2l0ZW0vSXRlbS5zY3NzXCI7XG5AaW1wb3J0IFwiL1VzZXJzL29rZWVmZmVfZC9Qcm9qZWN0LUltcG9zdGVyL2Rlbm5pcy1kb2VzLWNoYXQvc3JjL2NvbXBvbmVudHMvbWFzdGVyL01hc3Rlci5zY3NzXCI7XG5AaW1wb3J0IFwiL1VzZXJzL29rZWVmZmVfZC9Qcm9qZWN0LUltcG9zdGVyL2Rlbm5pcy1kb2VzLWNoYXQvc3JjL2NvbXBvbmVudHMvcXVpY2tyZXBseS9RdWlja1JlcGx5LnNjc3NcIjtcblxuLy8gR2VuZXJhdG9yIERlZmF1bHQgc3R5bGUsIGRlbGV0ZSB0aGVzZVxuaDEge1xuXHRmb250LXNpemU6IDIuMnJlbTtcbn1cblxuaDIge1xuXHRmb250LXNpemU6IDEuOHJlbTtcbn1cblxucCB7XG5cdGZvbnQtc2l6ZTogMS42cmVtO1xuXHRsaW5lLWhlaWdodDogMS40ZW07XG59XG5cbm9sLFxudWwge1xuXHRmb250LXNpemU6IDEuNnJlbTtcblx0bGluZS1oZWlnaHQ6IDEuNGVtO1xufVxuXG5jb2RlIHtcblx0YmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG5cdGNvbG9yOiB3aGl0ZTtcblx0Zm9udC1zaXplOiAxLjRyZW07XG5cblx0cGFkZGluZzogMnB4IDEwcHg7XG59XG4iLCIvLyBUeXBvZ3JhcGh5XG5cbi8vIEVYQU1QTEUgRk9OVCBNSVhJTlxuLy8gQG1peGluIGYtZnV0dXJhLXB0LXJlZyB7XG4vLyBcdGZvbnQgOiB7XG4vLyBcdFx0ZmFtaWx5OiAnZnV0dXJhLXB0Jywgc2Fucy1zZXJpZjtcbi8vIFx0XHR3ZWlnaHQ6IDkwMDtcbi8vIFx0XHRzdHlsZTogbm9ybWFsO1xuLy8gXHR9XG4vLyB9XG5cbi8vIFNldHRpbmcgZGVmYXVsdCBmb250IHNpemUgZm9yIHJlbVxuXG4vKiBvcGVuIHNhbnMgLSBsaWdodCAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnb3BlbnNhbnMtbGlnaHQnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHNyYzogbG9jYWwoJ09wZW5TYW5zIExpZ2h0JyksIGxvY2FsKCdPcGVuU2Fucy1MaWdodCcpLFxuICAgICAgIHVybCgnL3N0eWxlcy9mb250cy9PcGVuU2Fucy1MaWdodC50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyksIC8qIFNhZmFyaSwgQW5kcm9pZCwgaU9TICovXG59XG5cbi8qIG9wZW4gc2FucyAtIG1lZGl1bSAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnb3BlbnNhbnMtbWVkaXVtJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNTAwO1xuICBzcmM6IGxvY2FsKCdPcGVuU2FucyBNZWRpdW0nKSwgbG9jYWwoJ09wZW5TYW5zLU1lZGl1bScpLFxuICAgICAgIHVybCgnL3N0eWxlcy9mb250cy9PcGVuU2Fucy1NZWRpdW0udHRmJykgZm9ybWF0KCd0cnVldHlwZScpLCAvKiBTYWZhcmksIEFuZHJvaWQsIGlPUyAqL1xufVxuXG4vKiBvcGVuIHNhbnMgLSByZWd1bGFyICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdvcGVuc2Fucy1yZWd1bGFyJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBzcmM6IGxvY2FsKCdPcGVuU2FucyBSZWd1bGFyJyksIGxvY2FsKCdPcGVuU2Fucy1SZWd1bGFyJyksXG4gICAgICAgdXJsKCcvc3R5bGVzL2ZvbnRzL09wZW5TYW5zLVJlZ3VsYXIudHRmJykgZm9ybWF0KCd0cnVldHlwZScpLCAvKiBTYWZhcmksIEFuZHJvaWQsIGlPUyAqL1xufVxuXG4vKiBvcGVuIHNhbnMgLSBib2xkICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdvcGVuc2Fucy1ib2xkJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNzAwO1xuICBzcmM6IGxvY2FsKCdPcGVuU2FucyBCb2xkJyksIGxvY2FsKCdPcGVuU2Fucy1Cb2xkJyksXG4gICAgICAgdXJsKCcvc3R5bGVzL2ZvbnRzL09wZW5TYW5zLUJvbGQudHRmJykgZm9ybWF0KCd0cnVldHlwZScpLCAvKiBTYWZhcmksIEFuZHJvaWQsIGlPUyAqL1xufVxuXG4vKiBvcGVuIHNhbnMgLSBzZW1pYm9sZCAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnb3BlbnNhbnMtc2VtaWJvbGQnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIHNyYzogbG9jYWwoJ09wZW5TYW5zIFNlbWlCb2xkJyksIGxvY2FsKCdPcGVuU2Fucy1TZW1pQm9sZCcpLFxuICAgICAgIHVybCgnL3N0eWxlcy9mb250cy9PcGVuU2Fucy1TZW1pQm9sZC50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyksIC8qIFNhZmFyaSwgQW5kcm9pZCwgaU9TICovXG59XG5cbi8qIG9wZW4gc2FucyAtIGV4dHJhYm9sZCAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnb3BlbnNhbnMtZXh0cmFib2xkJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNjAwO1xuICBzcmM6IGxvY2FsKCdPcGVuU2FucyBFeHRyYUJvbGQnKSwgbG9jYWwoJ09wZW5TYW5zLUV4dHJhQm9sZCcpLFxuICAgICAgIHVybCgnL3N0eWxlcy9mb250cy9PcGVuU2Fucy1FeHRyYUJvbGQudHRmJykgZm9ybWF0KCd0cnVldHlwZScpLCAvKiBTYWZhcmksIEFuZHJvaWQsIGlPUyAqL1xufVxuXG4vLyBGb250IG1peGluc1xuQG1peGluIGYtcHJpbWFyeS1saWdodCB7XG5cdGZvbnQ6IHtcblx0XHRmYW1pbHk6ICdvcGVuc2Fucy1saWdodCcsIHNhbnMtc2VyaWY7XG5cdH1cbn1cblxuQG1peGluIGYtcHJpbWFyeS1yZWd1bGFyIHtcblx0Zm9udDoge1xuXHRcdGZhbWlseTogJ29wZW5zYW5zLXJlZ3VsYXInLCBzYW5zLXNlcmlmO1xuXHR9XG59XG5cbkBtaXhpbiBmLXByaW1hcnktbWVkaXVtIHtcblx0Zm9udDoge1xuXHRcdGZhbWlseTogJ29wZW5zYW5zLW1lZGl1bScsIHNhbnMtc2VyaWY7XG5cdH1cbn1cblxuQG1peGluIGYtcHJpbWFyeS1ib2xkIHtcblx0Zm9udDoge1xuXHRcdGZhbWlseTogJ29wZW5zYW5zLWJvbGQnLCBzYW5zLXNlcmlmO1xuXHR9XG59XG5cbkBtaXhpbiBmLXByaW1hcnktc2VtaWJvbGQge1xuXHRmb250OiB7XG5cdFx0ZmFtaWx5OiAnb3BlbnNhbnMtc2VtaWJvbGQnLCBzYW5zLXNlcmlmO1xuXHR9XG59XG5cbkBtaXhpbiBmLXByaW1hcnktZXh0cmFib2xkIHtcblx0Zm9udDoge1xuXHRcdGZhbWlseTogJ29wZW5zYW5zLWV4dHJhYm9sZCcsIHNhbnMtc2VyaWY7XG5cdH1cbn1cblxuLy8gR2VuZXJhbCB0eXBvZ3JhcGh5XG5odG1sIHtcblx0Zm9udC1zaXplOiA2Mi41JTtcblxuXHQtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcblx0LW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbn1cblxuYm9keSB7XG5cdC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuXHQtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xufVxuXG5hIHtcblx0Y29sb3I6IGluaGVyaXQ7XG5cdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLy8gU2V0IGRlZmF1bHQgdHlwb2dyYXBoeSBvdGhlciBodG1sIGVsZW1lbnRzXG5sYWJlbCxcbmJ1dHRvbixcbmEsXG50ZCB7XG5cdEBpbmNsdWRlIGYtcHJpbWFyeS1yZWd1bGFyO1xufVxuXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5wIHtcblx0bWFyZ2luOiAwO1xuXG5cdGZvbnQtd2VpZ2h0OiBub3JtYWw7XG59XG5cbmgxIHtcblx0bWFyZ2luLWJvdHRvbTogMTBweDtcblxuXHRAaW5jbHVkZSBmLXByaW1hcnktYm9sZDtcblx0Zm9udC1zaXplOiA3LjhyZW07XG59XG5cbmgyIHtcblx0bWFyZ2luLWJvdHRvbTogMTBweDtcblxuXHRAaW5jbHVkZSBmLXByaW1hcnktc2VtaWJvbGQ7XG5cdGZvbnQtc2l6ZTogMnJlbTtcblx0bGluZS1oZWlnaHQ6IDQwcHg7XG59XG5cbmgzIHtcblx0bWFyZ2luLWJvdHRvbTogMTBweDtcblxuXHRAaW5jbHVkZSBmLXByaW1hcnktc2VtaWJvbGQ7XG5cdGZvbnQtc2l6ZTogMS43cmVtO1xuXHRsaW5lLWhlaWdodDogMjBweDtcbn1cblxucCB7XG5cdG1hcmdpbjogMDtcblxuXHRAaW5jbHVkZSBmLXByaW1hcnktcmVndWxhcjtcblx0Zm9udC1zaXplOiAxLjVyZW07XG5cdGxpbmUtaGVpZ2h0OiAxLjQ7XG59XG5cbmNvZGUge1xuXHRmb250LXNpemU6IDEuMnJlbTtcblx0d2hpdGUtc3BhY2U6IHByZS13cmFwICFpbXBvcnRhbnQ7XG59XG4iLCIuYnV0dG9uIHtcblx0ZGlzcGxheTogYmxvY2s7XG5cblx0bWFyZ2luLWJvdHRvbTogMTBweDtcblxuXHRsaW5lLWhlaWdodDogbm9ybWFsO1xuXHRvdmVyZmxvdzogdmlzaWJsZTtcblx0cGFkZGluZzogMDtcblxuXHR3aWR0aDogMjAwcHg7XG5cdGhlaWdodDogNjBweDtcblxuXHRmb250LXNpemU6IDJyZW07XG5cblx0YmFja2dyb3VuZC1jb2xvcjogJGMtZ3JleTtcblxuXHR0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yICRhLWRlc2t0b3AtZW50ZXIgZWFzZS1pbjtcblx0Ym9yZGVyOiAwO1xuXG5cdCY6aG92ZXIge1xuXHRcdGJhY2tncm91bmQtY29sb3I6IGRhcmtlbigkYy1ncmV5LCAxMCUpO1xuXHR9XG5cblx0QGluY2x1ZGUgZ3JpZC1tZWRpYSgkbW9iaWxlKSB7XG5cdFx0dHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAkYS1tb2JpbGUtZW50ZXIgZWFzZS1pbjtcblx0fVxuXG5cdCYucHJpbWFyeSB7XG5cdFx0Y29sb3I6ICRjLXdoaXRlO1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICRjLXByaW1hcnk7XG5cblx0XHQmOmhvdmVyIHtcblx0XHRcdGJhY2tncm91bmQtY29sb3I6ICRjLXByaW1hcnktZGFyaztcblx0XHR9XG5cdH1cblxuXHQmLnNlY29uZGFyeSB7XG5cdFx0Y29sb3I6ICRjLXdoaXRlO1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICRjLXNlY29uZGFyeTtcblxuXHRcdCY6aG92ZXIge1xuXHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJGMtc2Vjb25kYXJ5LWRhcms7XG5cdFx0fVxuXHR9XG5cblx0Ji5yYWlzZWQge1xuXHRcdGJveC1zaGFkb3c6ICRlLXJhaXNlZDtcblx0fVxuXG5cdCYuZmxvYXRpbmcge1xuXHRcdGJveC1zaGFkb3c6ICRlLWZsb2F0aW5nO1xuXHR9XG59XG5cbiIsIi8vIENvbG91cnNcbiRjLWJsdWU6ICM0OTkwRTI7XG4kYy1ncmVlbjogIzJFQ0M3MTtcbiRjLXB1cnBsZTogIzlCNTlCNjtcbiRjLXllbGxvdzogI0YxQzQwRjtcbiRjLW9yYW5nZTogI0YzOUMxMjtcbiRjLXJlZDogI0U3NEMzQztcbiRjLWRhcmstZ3JleTogIzM0NDk1RTtcbiRjLWxpZ2h0LWdyZXk6ICNFQ0YwRjE7XG4kYy1ncmV5OiAjQkRDM0M3O1xuJGMtYmxhY2s6ICMwMDA7XG4kYy13aGl0ZTogI0ZGRjtcblxuXG4vLyBTZXR0aW5nIHRoZSBzdGF0ZXNcbiRjLXByaW1hcnk6ICRjLWJsdWU7XG4kYy1wcmltYXJ5LWxpZ2h0OiBsaWdodGVuKCRjLWJsdWUsIDEwJSk7XG4kYy1wcmltYXJ5LWRhcms6IGRhcmtlbigkYy1ibHVlLCAxMCUpO1xuXG4kYy1zZWNvbmRhcnk6ICRjLWdyZWVuO1xuJGMtc2Vjb25kYXJ5LWxpZ2h0OiBsaWdodGVuKCRjLWdyZWVuLCAxMCUpO1xuJGMtc2Vjb25kYXJ5LWRhcms6IGRhcmtlbigkYy1ncmVlbiwgMTAlKTtcblxuIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLy8vIGBncmlkLW1lZGlhYCBhbGxvd3MgeW91IHRvIGNoYW5nZSB5b3VyIGxheW91dCBiYXNlZCBvbiBhIG1lZGlhIHF1ZXJ5LlxuLy8vIEZvciBleGFtcGxlLCBhbiBvYmplY3QgY2FuIHNwYW4gMyBjb2x1bW5zIG9uIHNtYWxsIHNjcmVlbnMgYW5kIDYgY29sdW1uc1xuLy8vIG9uIGxhcmdlIHNjcmVlbnMuXG4vLy9cbi8vLyBZb3UgY2FuIHRha2UgdGhpcyBhIHN0ZXAgZnVydGhlciBhbmQgc2V0IGRpZmZlcmVudCBncmlkIGF0dHJpYnV0ZXMgbGlrZVxuLy8vIGd1dHRlciBzaXplIGFuZCB0b3RhbCBjb2x1bW4gY291bnQgZm9yIGVhY2ggbWVkaWEgcXVlcnkuIFNvLCBmb3IgZXhhbXBsZSxcbi8vLyB5b3UgY2FuIGhhdmUgYSBgMXJlbWAgZ3V0dGVyIG9uIHNtYWxsIHNjcmVlbnMsIGFuZCBhIGAycmVtYCBndXR0ZXIgb24gbGFyZ2Vcbi8vLyBzY3JlZW5zLlxuLy8vXG4vLy8gQGdyb3VwIGZlYXR1cmVzXG4vLy9cbi8vLyBAbmFtZSBHcmlkIG1lZGlhXG4vLy9cbi8vLyBAYXJndW1lbnQge21hcH0gJGdyaWRcbi8vLyAgIFRoZSBncmlkIHRvIGJlIHVzZWQgd2l0aGluIHRoZSBzY29wZSBvZiB0aGUgYmxvY2suXG4vLy8gICBUaGlzIGdyaWQgc2hvdWxkIGluY2x1ZGUgdGhlIGBtZWRpYWAgcHJvcGVydHkgdG8gZGV0ZXJtaW5lIHRoZSBleHByZXNzaW9uXG4vLy8gICBmb3IgdGhlIG1lZGlhIHF1ZXJ5LlxuLy8vXG4vLy8gQGNvbnRlbnRcbi8vLyAgIEdyaWQgbWVkaWEgd2lsbCB0ZW1wb3JhcmlseSB0aGUgb3ZlcnJpZGUgdGhlIGRlZmF1bHQgZ3JpZCB3aXRoIHRoZVxuLy8vICAgYXR0cmlidXRlcyBvZiB0aGUgY3VzdG9tIGdyaWQuIFRoaXMgY2hhbmdlIGlzIHNjb3BlZCB0byB3aXRoaW4gdGhlIG1peGluXG4vLy8gICBibG9jaywgYW5kIG9uY2UgdGhlIG1peGluIGhhcyBlbmRlZCB0aGUgZGVmYXVsdCBncmlkIHdpbGwgcmV2ZXJ0IHRvIGl0c1xuLy8vICAgb3JpZ2luYWwgc3RhdGUgYXMgZGVmaW5lZCBieSBgJG5lYXQtZ3JpZGAuIFRoaXMgYWxsb3dzIGZvciBkaWZmZXJlbnRcbi8vLyAgIGd1dHRlciB3aWR0aCBhbmQgY29sdW1uIGNvdW50IGJhc2VkIG9uIHNjcmVlbiBzaXplIG9yIG90aGVyIHByb3BlcnRpZXMuXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzXG4vLy8gICAkY3VzdG9tLW5lYXQtZ3JpZDogKFxuLy8vICAgICBjb2x1bW5zOiAxMixcbi8vLyAgICAgZ3V0dGVyOiA1MHB4LFxuLy8vICAgICBtZWRpYTogMTAwMHB4LFxuLy8vICAgKTtcbi8vL1xuLy8vICAgLmVsZW1lbnQge1xuLy8vICAgICBAaW5jbHVkZSBncmlkLWNvbHVtbigzKTtcbi8vL1xuLy8vICAgICBAaW5jbHVkZSBncmlkLW1lZGlhKCRjdXN0b20tbmVhdC1ncmlkKXtcbi8vLyAgICAgICBAaW5jbHVkZSBncmlkLWNvbHVtbig2KTtcbi8vLyAgICAgfVxuLy8vICAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgY3NzXG4vLy8gICAuZWxlbWVudCB7XG4vLy8gICAgIHdpZHRoOiBjYWxjKDI1JSAtIDI1cHgpO1xuLy8vICAgICBmbG9hdDogbGVmdDtcbi8vLyAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4vLy8gICB9XG4vLy9cbi8vLyAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAwMHB4KSB7XG4vLy8gICAgIC5lbGVtZW50IHtcbi8vLyAgICAgICB3aWR0aDogY2FsYyg1MCUgLSA3NXB4KTtcbi8vLyAgICAgICBmbG9hdDogbGVmdDtcbi8vLyAgICAgICBtYXJnaW4tbGVmdDogNTBweDtcbi8vLyAgICAgfVxuLy8vICAgfVxuXG5AbWl4aW4gZ3JpZC1tZWRpYSgkZ3JpZCkge1xuICAkX21lZGlhOiBfcmV0cmlldmUtbmVhdC1zZXR0aW5nKCRncmlkLCBtZWRpYSk7XG4gICRfcXVlcnk6IF9uZWF0LXBhcnNlLW1lZGlhKCRfbWVkaWEpO1xuXG4gIEBtZWRpYSAjeyRfcXVlcnl9IHtcbiAgICAkX2RlZmF1bHQtbmVhdC1ncmlkOiAkbmVhdC1ncmlkO1xuICAgICRuZWF0LWdyaWQ6IG1hcC1tZXJnZSgkbmVhdC1ncmlkLCAkZ3JpZCkgIWdsb2JhbDtcbiAgICBAY29udGVudDtcbiAgICAkbmVhdC1ncmlkOiAkX2RlZmF1bHQtbmVhdC1ncmlkICFnbG9iYWw7XG4gIH1cbn1cbiIsIkBjaGFyc2V0IFwiVVRGLThcIjtcbi8vLyBDcmVhdGVzIGEgZ3JpZCBjb250YWluZXIgd2l0aCBjbGVhcmZpeC5cbi8vL1xuLy8vIEBncm91cCBmZWF0dXJlc1xuLy8vXG4vLy8gQG5hbWUgR3JpZCBjb250YWluZXJcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyAgIC5lbGVtZW50IHtcbi8vLyAgICAgQGluY2x1ZGUgZ3JpZC1jb250YWluZXI7XG4vLy8gICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBjc3Ncbi8vLyAgIC5lbGVtZW50OjphZnRlciB7XG4vLy8gICAgIGNsZWFyOiBib3RoO1xuLy8vICAgICBjb250ZW50OiBcIlwiO1xuLy8vICAgICBkaXNwbGF5OiBibG9jaztcbi8vLyAgIH1cblxuQG1peGluIGdyaWQtY29udGFpbmVyKCRncmlkOiAkbmVhdC1ncmlkKSB7XG4gIEBpZiAkZ3JpZCAhPSAkbmVhdC1ncmlkIHtcbiAgICBAd2FybiBcImBncmlkLWNvbnRhaW5lcmAgZG9lcyBub3QgdXNlIGdyaWQgcHJvcGVydGVzLlxuICAgICAgQ3VzdG9tIGdyaWRzIGRvIG5vdCBuZWVkIHRvIGJlIHBhc3NlZCBpbiB0byB0aGlzIG1peGluLlwiO1xuICB9XG5cbiAgJjo6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gIH1cbn1cbiIsIi8vIEdyaWRcbi5ncmlkLWNvbnRhaW5lciB7XG5cdEBpbmNsdWRlIGdyaWQtY29udGFpbmVyO1xufVxuXG4uZ3JpZCB7XG5cdG1heC13aWR0aDogJG1heC13aWR0aDtcblxuXHQvLyBJdGVtXG5cdD4gLml0ZW0ge1xuXHRcdG1hcmdpbi1ib3R0b206IDEwcHg7XG5cblx0XHRAaW5jbHVkZSBncmlkLWNvbHVtbigxMik7XG5cblx0XHQmLi1vbmUge1xuXHRcdFx0QGluY2x1ZGUgZ3JpZC1jb2x1bW4oMSk7XG5cdFx0fVxuXG5cdFx0Ji4tdHdvIHtcblx0XHRcdEBpbmNsdWRlIGdyaWQtY29sdW1uKDIpO1xuXHRcdH1cblxuXHRcdCYuLXRocmVlIHtcblx0XHRcdEBpbmNsdWRlIGdyaWQtY29sdW1uKDMpO1xuXHRcdH1cblxuXHRcdCYuLWZvdXIge1xuXHRcdFx0QGluY2x1ZGUgZ3JpZC1jb2x1bW4oNCk7XG5cdFx0fVxuXG5cdFx0Ji4tZml2ZSB7XG5cdFx0XHRAaW5jbHVkZSBncmlkLWNvbHVtbig1KTtcblx0XHR9XG5cblx0XHQmLi1zaXgge1xuXHRcdFx0QGluY2x1ZGUgZ3JpZC1jb2x1bW4oNik7XG5cdFx0fVxuXG5cdFx0Ji4tc2V2ZW4ge1xuXHRcdFx0QGluY2x1ZGUgZ3JpZC1jb2x1bW4oNyk7XG5cdFx0fVxuXG5cdFx0Ji4tZWlnaHQge1xuXHRcdFx0QGluY2x1ZGUgZ3JpZC1jb2x1bW4oOCk7XG5cdFx0fVxuXG5cdFx0Ji4tbmluZSB7XG5cdFx0XHRAaW5jbHVkZSBncmlkLWNvbHVtbig5KTtcblx0XHR9XG5cblx0XHQmLi10ZW4ge1xuXHRcdFx0QGluY2x1ZGUgZ3JpZC1jb2x1bW4oMTApO1xuXHRcdH1cblxuXHRcdCYuLWVsZXZlbiB7XG5cdFx0XHRAaW5jbHVkZSBncmlkLWNvbHVtbigxMSk7XG5cdFx0fVxuXG5cdFx0Ji4tdHdlbHZlIHtcblx0XHRcdEBpbmNsdWRlIGdyaWQtY29sdW1uKDEyKTtcblx0XHR9XG5cblx0XHRAaW5jbHVkZSBncmlkLW1lZGlhKCR0YWJsZXQpIHtcblx0XHRcdEBpbmNsdWRlIGdyaWQtY29sdW1uKDIpO1xuXG5cdFx0XHQmLi1vbmUsXG5cdFx0XHQmLi10d28sXG5cdFx0XHQmLi10aHJlZSxcblx0XHRcdCYuLWZvdXIge1xuXHRcdFx0XHRAaW5jbHVkZSBncmlkLWNvbHVtbigyKTtcblx0XHRcdH1cblxuXHRcdFx0Ji4tZml2ZSxcblx0XHRcdCYuLXNpeCxcblx0XHRcdCYuLXNldmVuLFxuXHRcdFx0Ji4tZWlnaHQsXG5cdFx0XHQmLi1uaW5lLFxuXHRcdFx0Ji4tdGVuLFxuXHRcdFx0Ji4tZWxldmVuLFxuXHRcdFx0Ji4tdHdlbHZlLCB7XG5cdFx0XHRcdEBpbmNsdWRlIGdyaWQtY29sdW1uKDQpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdEBpbmNsdWRlIGdyaWQtbWVkaWEoJG1vYmlsZSkge1xuXHRcdFx0QGluY2x1ZGUgZ3JpZC1jb2x1bW4oNCk7XG5cblx0XHRcdCYuLW9uZSxcblx0XHRcdCYuLXR3byxcblx0XHRcdCYuLXRocmVlLFxuXHRcdFx0Ji4tZm91cixcblx0XHRcdCYuLWZpdmUsXG5cdFx0XHQmLi1zaXgsXG5cdFx0XHQmLi1zZXZlbixcblx0XHRcdCYuLWVpZ2h0LFxuXHRcdFx0Ji4tbmluZSxcblx0XHRcdCYuLXRlbixcblx0XHRcdCYuLWVsZXZlbixcblx0XHRcdCYuLXR3ZWx2ZSwge1xuXHRcdFx0XHRAaW5jbHVkZSBncmlkLWNvbHVtbig0KTtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn1cbiIsIkBjaGFyc2V0IFwiVVRGLThcIjtcbi8vLyBDcmVhdGVzIGEgZ3JpZCBjb2x1bW4gb2YgcmVxdWVzdGVkIHNpemUuXG4vLy9cbi8vLyBAZ3JvdXAgZmVhdHVyZXNcbi8vL1xuLy8vIEBuYW1lIEdyaWQgY29sdW1uXG4vLy9cbi8vLyBAYXJndW1lbnQge251bWJlciAodW5pdGxlc3MpfSAkY29sdW1ucyBbbnVsbF1cbi8vLyAgIFNwZWNpZmllcyB0aGUgbnVtYmVyIG9mIGNvbHVtbnMgYW4gZWxlbWVudCBzaG91bGQgc3BhbiBiYXNlZCBvbiB0aGUgdG90YWxcbi8vLyAgIGNvbHVtbnMgb2YgdGhlIGdyaWQuXG4vLy9cbi8vLyAgIFRoaXMgY2FuIGFsc28gYmUgZGVmaW5lZCBpbiBhIHNob3J0aGFuZCBzeW50YXh0IHdoaWNoIGFsc28gY29udGFpbnMgdGhlXG4vLy8gICB0b3RhbCBjb2x1bW4gY291bnQgc3VjaCBhcyBgMyBvZiA1YC5cbi8vL1xuLy8vIEBhcmd1bWVudCB7bWFwfSAkZ3JpZCBbJG5lYXQtZ3JpZF1cbi8vLyAgIFRoZSBncmlkIHRvIGJlIHVzZWQgdG8gZ2VuZXJhdGUgdGhlIGNvbHVtbi5cbi8vLyAgIEJ5IGRlZmF1bHQsIHRoZSBnbG9iYWwgYCRuZWF0LWdyaWRgIHdpbGwgYmUgdXNlZC5cbi8vL1xuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyAgIC5lbGVtZW50IHtcbi8vLyAgICAgQGluY2x1ZGUgZ3JpZC1jb2x1bW4oMyk7XG4vLy8gICB9XG4vLy9cbi8vLyBAZXhhbXBsZSBjc3Ncbi8vLyAgIC5lbGVtZW50IHtcbi8vLyAgICAgd2lkdGg6IGNhbGMoMjUlIC0gMjVweCk7XG4vLy8gICAgIGZsb2F0OiBsZWZ0O1xuLy8vICAgICBtYXJnaW4tbGVmdDogMjBweDtcbi8vLyAgIH1cblxuQG1peGluIGdyaWQtY29sdW1uKCRjb2x1bW5zOiBudWxsLCAkZ3JpZDogJG5lYXQtZ3JpZCkge1xuICAkY29sdW1uczogX25lYXQtY29sdW1uLWRlZmF1bHQoJGdyaWQsICRjb2x1bW5zKTtcbiAgJF9ncmlkLWNvbHVtbnM6IF9yZXRyaWV2ZS1uZWF0LXNldHRpbmcoJGdyaWQsIGNvbHVtbnMpO1xuICAkX2dyaWQtZ3V0dGVyOiBfcmV0cmlldmUtbmVhdC1zZXR0aW5nKCRncmlkLCBndXR0ZXIpO1xuXG4gIHdpZHRoOiBjYWxjKCN7X25lYXQtY29sdW1uLXdpZHRoKCRncmlkLCAkY29sdW1ucyl9KTtcbiAgZmxvYXQ6IF9uZWF0LWZsb2F0LWRpcmVjdGlvbigkZ3JpZCk7XG4gIG1hcmdpbi0je19uZWF0LWZsb2F0LWRpcmVjdGlvbigkZ3JpZCl9OiAkX2dyaWQtZ3V0dGVyO1xufVxuIiwiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLy8vIFJldHVybiB0aGUgZmxvYXQgZGlyZWN0aW9uIG9mIHRoZSBncmlkLlxuLy8vXG4vLy8gQGFyZ3VtZW50IHttYXB9ICRncmlkXG4vLy9cbi8vLyBAcmV0dXJuIHtzdHJpbmd9XG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzXG4vLy8gICBfbmVhdC1mbG9hdC1kaXJlY3Rpb24oJG5lYXQtZ3JpZClcbi8vL1xuLy8vIEBhY2Nlc3MgcHJpdmF0ZVxuXG5AZnVuY3Rpb24gX25lYXQtZmxvYXQtZGlyZWN0aW9uKCRncmlkKSB7XG4gICRfZGlyZWN0aW9uOiBfcmV0cmlldmUtbmVhdC1zZXR0aW5nKCRncmlkLCBkaXJlY3Rpb24pO1xuICAkX2Zsb2F0LWRpcmVjdGlvbjogbnVsbDtcbiAgQGlmICRfZGlyZWN0aW9uID09IFwibHRyXCIge1xuICAgICAgJF9mbG9hdC1kaXJlY3Rpb246IGxlZnQ7XG4gIH0gQGVsc2UgaWYgJF9kaXJlY3Rpb24gPT0gXCJydGxcIiB7XG4gICAgJF9mbG9hdC1kaXJlY3Rpb246IHJpZ2h0O1xuICB9XG4gIEByZXR1cm4gJF9mbG9hdC1kaXJlY3Rpb247XG59XG4iLCIuaGVhZGVyIHtcblx0cG9zaXRpb246IGZpeGVkO1xuXHR0b3A6IDA7XG5cdHdpZHRoOiAxMDAlO1xuXHRoZWlnaHQ6IDYwcHg7XG5cdHotaW5kZXg6IDk5OTk5O1xuXG5cdGNvbG9yOiAkYy1ibGFjaztcblx0YmFja2dyb3VuZC1jb2xvcjogJGMtd2hpdGU7XG5cblx0LmxpbmtzIHtcblx0XHRmbG9hdDogcmlnaHQ7XG5cdH1cblxuXHQubGluay1saXN0IHtcblx0XHRtYXJnaW46IDA7XG5cdFx0cGFkZGluZzogMDtcblx0XHRsaW5lLWhlaWdodDogNjBweDtcblx0fVxuXG5cdC5saW5rIHtcblx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0bWFyZ2luLWxlZnQ6IDEwcHg7XG5cblx0XHQ+IGEge1xuXHRcdFx0QGluY2x1ZGUgZi1wcmltYXJ5LXNlbWlib2xkO1xuXHRcdFx0Zm9udC1zaXplOiAxLjhyZW07XG5cblx0XHRcdHRyYW5zaXRpb246IGNvbG9yICRhLWRlc2t0b3AtZW50ZXIgZWFzZS1vdXQ7XG5cblx0XHRcdCY6aG92ZXIsXG5cdFx0XHQmOmFjdGl2ZSB7XG5cdFx0XHRcdGNvbG9yOiBsaWdodGVuKCRjLWJsYWNrLCAzMCUpO1xuXHRcdFx0fVxuXG5cdFx0XHRAaW5jbHVkZSBncmlkLW1lZGlhKCRtb2JpbGUpIHtcblx0XHRcdFx0Zm9udC1zaXplOiAxLjRyZW07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0JjpsYXN0LW9mLXR5cGUge1xuXHRcdFx0bWFyZ2luLXJpZ2h0OiAxMHB4O1xuXHRcdH1cblxuXHRcdEBpbmNsdWRlIGdyaWQtbWVkaWEoJG1vYmlsZSkge1xuXHRcdFx0ZGlzcGxheTogbm9uZTtcblx0XHR9XG5cdH1cblxuXHQubGluay1ob21lIHtcblx0XHRAaW5jbHVkZSBmLXByaW1hcnktZXh0cmFib2xkO1xuXHRcdG1hcmdpbi1sZWZ0OiAyMHB4O1xuXG5cdFx0Zm9udC1zaXplOiAxLjhyZW07XG5cdFx0bGluZS1oZWlnaHQ6IDYwcHg7XG5cblx0XHR0cmFuc2l0aW9uOiBjb2xvciAkYS1kZXNrdG9wLWVudGVyIGVhc2Utb3V0O1xuXG5cdFx0Jjpob3Zlcixcblx0XHQmOmFjdGl2ZSB7XG5cdFx0XHRjb2xvcjogbGlnaHRlbigkYy1ibGFjaywgMzAlKTtcblx0XHR9XG5cblx0XHRAaW5jbHVkZSBncmlkLW1lZGlhKCRtb2JpbGUpIHtcblx0XHRcdGZvbnQtc2l6ZTogMS4ycmVtO1xuXHRcdH1cblx0fVxufVxuIiwiLmxvYWRpbmctb3ZlcmxheSB7XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0ei1pbmRleDogOTk5OTk7XG5cdHRvcDogMDtcblx0bGVmdDogMDtcblxuXHRkaXNwbGF5OiBmbGV4O1xuXHRhbGlnbi1pdGVtczogY2VudGVyO1xuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblxuXHR3aWR0aDogMTAwJTtcblx0aGVpZ2h0OiAxMDAlO1xuXG5cdGJhY2tncm91bmQtY29sb3I6IGRhcmtlbigkYy13aGl0ZSwgMiUpO1xuXG5cdG9wYWNpdHk6IDA7XG5cblx0dHJhbnNpdGlvbjogYWxsICRhLWRlc2t0b3AtZXhpdCBlYXNlLWluO1xuXG5cdCYuLXZpc2libGUge1xuXHRcdG9wYWNpdHk6IDAuNTtcblx0fVxuXG5cdC5sb2FkaW5nIHtcblx0XHR3aWR0aDogMTAuNXJlbTtcblx0XHRoZWlnaHQ6IDEwLjVyZW07XG5cblx0XHQubG9hZGluZy1zdmcge1xuXHRcdFx0QGtleWZyYW1lcyByb3RhdGluZyB7XG5cdFx0XHRcdGZyb20ge1xuXHRcdFx0XHRcdHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHRvIHtcblx0XHRcdFx0XHR0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRhbmltYXRpb246IHJvdGF0aW5nIDFzIGxpbmVhciBpbmZpbml0ZTtcblx0XHRcdGZpbGw6IHRyYW5zcGFyZW50O1xuXHRcdFx0c3Ryb2tlOiAkYy1ibGFjaztcblx0XHRcdHN0cm9rZS13aWR0aDogNztcblx0XHRcdHN0cm9rZS1saW5lY2FwOiBidXR0O1xuXHRcdFx0c3Ryb2tlLWRhc2hhcnJheTogMjQwO1xuXHRcdFx0c3Ryb2tlLWRhc2hvZmZzZXQ6IDQwO1xuXHRcdH1cblx0fVxufVxuIiwiLnByb2dyZXNzLWJhciB7XG5cdG1hcmdpbi1ib3R0b206IDQwcHg7XG5cblx0d2lkdGg6IDEwMCU7XG5cdG1heC13aWR0aDogNjk0cHg7XG5cblx0YmFja2dyb3VuZC1jb2xvcjogJGMtbGlnaHQtZ3JleTtcblxuXHQ+IHNwYW4ge1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdGhlaWdodDogNnB4O1xuXHR9XG5cblx0LmJvdHRvbSB7XG5cdFx0d2lkdGg6IDAlO1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICRjLWJsYWNrO1xuXG5cdFx0dHJhbnNpdGlvbjogd2lkdGggMjcwbXMgZWFzZS1vdXQ7XG5cblx0XHQmLi10ZW4ge1xuXHRcdFx0d2lkdGg6IDEwJTtcblx0XHR9XG5cblx0XHQmLi10d2VudHkge1xuXHRcdFx0d2lkdGg6IDIwJTtcblx0XHR9XG5cblx0XHQmLi10aGlydHkge1xuXHRcdFx0d2lkdGg6IDMwJTtcblx0XHR9XG5cblx0XHQmLi1mb3J0eSB7XG5cdFx0XHR3aWR0aDogNDAlO1xuXHRcdH1cblxuXHRcdCYuLWZpZnR5IHtcblx0XHRcdHdpZHRoOiA1MCU7XG5cdFx0fVxuXG5cdFx0Ji4tc2l4dHkge1xuXHRcdFx0d2lkdGg6IDYwJTtcblx0XHR9XG5cblx0XHQmLi1zZXZlbnR5IHtcblx0XHRcdHdpZHRoOiA3MCU7XG5cdFx0fVxuXG5cdFx0Ji4tZWlnaHR5IHtcblx0XHRcdHdpZHRoOiA4MCU7XG5cdFx0fVxuXG5cdFx0Ji4tbmluZXR5IHtcblx0XHRcdHdpZHRoOiA5MCU7XG5cdFx0fVxuXG5cdFx0Ji4tb25lLWh1bmRyZWQge1xuXHRcdFx0d2lkdGg6IDEwMCU7XG5cdFx0fVxuXHR9XG59XG4iLCIuc2tpcGxpbmtzIHtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuXG4gIGEge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAtMTAwMHB4O1xuICAgIHotaW5kZXg6IDIwMDtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogLjVlbTtcbiAgICBiYWNrZ3JvdW5kOiAkYy13aGl0ZTtcbiAgICBmb250LXNpemU6IDIwMCU7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG4gICAgJjphY3RpdmUsXG4gICAgJjpmb2N1cyxcbiAgICAmOmhvdmVyIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICBjb2xvcjogJGMtd2hpdGU7XG4gICAgICBiYWNrZ3JvdW5kOiAkYy1ibGFjaztcbiAgICB9XG4gIH1cbn1cbiIsIi5jaGF0LWJ1YmJsZSB7XG5cdC5ib3QsXG5cdC51c2VyIHtcblx0XHRwYWRkaW5nOiA4cHg7XG5cblx0XHRib3JkZXItcmFkaXVzOiA0cHg7XG5cdH1cblxuXHQuYm90IHtcblx0XHRmbG9hdDogcmlnaHQ7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogJGMtYmx1ZTtcblxuXHRcdD4gLnJlcGx5IHtcblx0XHRcdGNvbG9yOiAkYy13aGl0ZTtcblx0XHRcdHRleHQtYWxpZ246IHJpZ2h0O1xuXHRcdH1cblx0fVxuXG5cdC51c2VyIHtcblx0XHRmbG9hdDogbGVmdDtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkYy13aGl0ZTtcblxuXHRcdD4gLnJlcGx5IHtcblx0XHRcdHRleHQtYWxpZ246IGxlZnQ7XG5cdFx0fVxuXHR9XG59XG4iLCIuY29udmVyc2F0aW9uLXdyYXBwZXIge1xuXHRkaXNwbGF5OiBmbGV4O1xuXHRmbGV4OiA1O1xuXHRib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHRvdmVyZmxvdy15OiBzY3JvbGw7XG5cblx0cGFkZGluZzogMTBweDtcblx0YmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XG5cblx0LmNvbnZlcnNhdGlvbiB7XG5cdFx0bWFyZ2luLXRvcDogYXV0bztcblx0fVxufVxuIiwiLmdyaWQge1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0d2lkdGg6IDEwMCU7XG59XG4iLCIuaG9tZSB7XG5cdEBpbmNsdWRlIGdyaWQtY29udGFpbmVyKDgwMHB4KTtcblx0bWFyZ2luOiAwIGF1dG87XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cblx0aGVpZ2h0OiAxMDB2aDtcblx0ZGlzcGxheTogZmxleDtcblx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblxuXHQuY2hhdCB7XG5cdFx0ZGlzcGxheTogZmxleDtcblx0XHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXHRcdGZsZXg6IDE7XG5cdH1cblxuXHQuY3RhIHtcblx0XHRmbGV4OiAzO1xuXHR9XG59XG4iLCIuaXRlbSB7XG5cdCYucXVpY2stcmVwbHkge1xuXHRcdGhlaWdodDogNjBweDtcblx0fVxuXG5cdCYuY2hhdC1idWJibGUge1xuXG5cdH1cbn1cbiJdfQ== */
